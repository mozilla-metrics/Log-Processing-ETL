<?xml version="1.0"?>
<!-- The contents of this file are subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this file,
   - You can obtain one at http://mozilla.org/MPL/2.0/.  -->
<GenericAggHandlerConfig>
	<Database>
		<Url>${VERTICA_GAH_DBURL}</Url>
		<Class>${VERTICA_DRIVER}</Class>
		<User>${VERTICA_USER}</User>
		<Pass>${VERTICA_PASS}</Pass>
	</Database>
  <AggregateInfo>
    <Table>a_th_blocklist_locale_location_channel</Table>
    <CreateTableStatement>

			CREATE TABLE "a_th_blocklist_locale_location_channel" (
			"dates_Year" int8 NOT NULL,
			"dates_Month" int8 NOT NULL,
			"dates_Day_of_month" int8,
			"dates_Date" varchar(10),
			"products_Name" varchar(20),
			"products_Version_major" varchar(7),
			"products_Version_string" varchar(30),
			"locations_Continent_name" varchar(50),
			"locations_Country_name" varchar(50),
			"product_channels_Name" varchar(100),
			"locales_Code" varchar(15),
			"blocklist_requests_by_day_Total_Requests" int8,
			"blocklist_requests_by_day_fact_count" int8)
			PARTITION BY "dates_Year" || '-Q' || ((("dates_Month" - 1) / 3) + 1);


			CREATE PROJECTION "a_th_blocklist_locale_location_channel_super" (
			"dates_Year" ENCODING RLE,
			"dates_Month"  ENCODING RLE,
			"dates_Day_of_month"  ENCODING RLE,
			"dates_Date" ENCODING RLE,
			"products_Name" ENCODING RLE,
			"products_Version_major",
			"products_Version_string",
			"locations_Continent_name",
			"locations_Country_name",
			"product_channels_Name" ENCODING RLE ,
			"locales_Code" ENCODING RLE,
			"blocklist_requests_by_day_Total_Requests" ,
			"blocklist_requests_by_day_fact_count" )
			as select
			"dates_Year",
			"dates_Month" ,
			"dates_Day_of_month" ,
			"dates_Date" ,
			"products_Name" ,
			"products_Version_major",
			"products_Version_string" ,
			"locations_Continent_name",
			"locations_Country_name",
			"product_channels_Name",
			"locales_Code",
			"blocklist_requests_by_day_Total_Requests" ,
			"blocklist_requests_by_day_fact_count"
			from "a_th_blocklist_locale_location_channel"
			ORDER BY "dates_Year" ,"dates_Month",  "dates_Day_of_month", "dates_Date", "products_Name",
			"locales_Code", "product_channels_Name"
			SEGMENTED BY MODULARHASH("blocklist_requests_by_day_Total_Requests") ALL NODES;



			CREATE PROJECTION "a_th_blocklist_locale_location_channel_super_buddy" (
			"dates_Year" ENCODING RLE,
			"dates_Month"  ENCODING RLE,
			"dates_Day_of_month"  ENCODING RLE,
			"dates_Date" ENCODING RLE,
			"products_Name" ENCODING RLE,
			"products_Version_major",
			"products_Version_string",
			"locations_Continent_name"  ENCODING RLE,
			"locations_Country_name"  ENCODING RLE,
			"product_channels_Name" ENCODING RLE ,
			"locales_Code",
			"blocklist_requests_by_day_Total_Requests" ,
			"blocklist_requests_by_day_fact_count" )
			as select
			"dates_Year",
			"dates_Month" ,
			"dates_Day_of_month" ,
			"dates_Date" ,
			"products_Name" ,
			"products_Version_major",
			"products_Version_string" ,
			"locations_Continent_name",
			"locations_Country_name",
			"product_channels_Name",
			"locales_Code",
			"blocklist_requests_by_day_Total_Requests" ,
			"blocklist_requests_by_day_fact_count"
			from "a_th_blocklist_locale_location_channel"
			ORDER BY "dates_Year" ,"dates_Month",  "dates_Day_of_month", "dates_Date", "products_Name",
			"locations_Continent_name", "locations_Country_name", "product_channels_Name"
			SEGMENTED BY MODULARHASH("blocklist_requests_by_day_Total_Requests") ALL NODES OFFSET 1;



		</CreateTableStatement>
    <TableExistsStatement>select 1 from a_th_blocklist_locale_location_channel limit 1 </TableExistsStatement>
    <DropTableStatement>drop table a_th_blocklist_locale_location_channel CASCADE</DropTableStatement>
    <!-- AggregateMode can be TRUNCATE or INCREMENT;

				TRUNCATE will issue a DROP TABLE and recreate it.
				INCREMENT will try to find the new objects and insert only those

				-->
    <AggregateMode>INCREMENT</AggregateMode>
    <!-- QueryOnFact and QueryOnAggregate must return a single column named "value" -->
    <QueryOnFact>
					SELECT distinct d.date as value FROM blocklist_requests_by_day f inner join dates d on d.date_id=f.utc_date_id
				</QueryOnFact>
    <QueryOnAggregate>
					SELECT distinct a.dates_Date as value FROM a_th_blocklist_locale_location_channel a;
				</QueryOnAggregate>
    <QuoteValue>true</QuoteValue>
    <IncrementQuery>
					INSERT /*+ direct */ INTO "a_th_blocklist_locale_location_channel" (
					"dates_Year",
					"dates_Month",
					"dates_Day_of_month",
					"dates_Date",
					"products_Name",
					"products_Version_major",
					"products_Version_string",
					"locations_Continent_name",
					"locations_Country_name",
					"product_channels_Name",
					"locales_Code",
					"blocklist_requests_by_day_Total_Requests",
					"blocklist_requests_by_day_fact_count")
					select
					"dates"."year" as "dates_Year",
					"dates"."month" as "dates_Month",
					"dates"."day_of_month" as "dates_Day_of_month",
					"dates"."date" as "dates_Date",
					"products"."product_name" as "products_Name",
					"products"."formatted_version_major" as "products_Version_major",
					"products"."product_version" as "products_Version_string",
					"locations"."continent_name" as "locations_Country_name",
					"locations"."country_name" as "locations_Country_name",
					"product_channels"."product_channel" as "product_channels_Name",
					"locales"."code" as "locales_Code",
					sum("blocklist_requests_by_day_th"."requests") as "blocklist_requests_by_day_Total_Requests",
					count(*) as "blocklist_requests_by_day_fact_count"
					from
					"blocklist_requests_by_day_th" as "blocklist_requests_by_day_th",
					"dates" as "dates",
					"products" as "products",
					"locations" as "locations",
					"product_channels" as "product_channels",
					"locales" as "locales"
					${INCREMENT_CONDITION_FROM}
					where
					"blocklist_requests_by_day_th"."utc_date_id" = "dates"."date_id" and
					"blocklist_requests_by_day_th"."product_id" = "products"."product_id" and
					"blocklist_requests_by_day_th"."location_id" = "locations"."location_id" and
					"blocklist_requests_by_day_th"."product_channel_id" = "product_channels"."product_channel_id" and
					"blocklist_requests_by_day_th"."locale_id" = "locales"."locale_id"
					and "dates"."date" IN (${INCREMENT_LIST})
					${INCREMENT_CONDITION_WHERE}
					group by
					"dates"."year",
					"dates"."month",
					"dates"."day_of_month",
					"dates"."date",
					"products"."product_name",
					"products"."formatted_version_major",
					"products"."product_version",
					"locations"."continent_name",
					"locations"."country_name",
					"product_channels"."product_channel",
					"locales"."code";

				</IncrementQuery>
    <InsertQuery>
					INSERT /*+ direct */ INTO "a_th_blocklist_locale_location_channel" (
					"dates_Year",
					"dates_Month",
					"dates_Day_of_month",
					"dates_Date",
					"products_Name",
					"products_Version_major",
					"products_Version_string",
					"locations_Continent_name",
					"locations_Country_name",
					"product_channels_Name",
					"locales_Code",
					"blocklist_requests_by_day_Total_Requests",
					"blocklist_requests_by_day_fact_count")
					select
					"dates"."year" as "dates_Year",
					"dates"."month" as "dates_Month",
					"dates"."day_of_month" as "dates_Day_of_month",
					"dates"."date" as "dates_Date",
					"products"."product_name" as "products_Name",
					"products"."formatted_version_major" as "products_Version_major",
					"products"."product_version" as "products_Version_string",
					"locations"."continent_name" as "locations_Country_name",
					"locations"."country_name" as "locations_Country_name",
					"product_channels"."product_channel" as "product_channels_Name",
					"locales"."code" as "locales_Code",
					sum("blocklist_requests_by_day_th"."requests") as "blocklist_requests_by_day_Total_Requests",
					count(*) as "blocklist_requests_by_day_fact_count"
					from
					"blocklist_requests_by_day_th" as "blocklist_requests_by_day_th",
					"dates" as "dates",
					"products" as "products",
					"locations" as "locations",
					"product_channels" as "product_channels",
					"locales" as "locales"
					where
					"blocklist_requests_by_day_th"."utc_date_id" = "dates"."date_id" and
					"blocklist_requests_by_day_th"."product_id" = "products"."product_id" and
					"blocklist_requests_by_day_th"."location_id" = "locations"."location_id" and
					"blocklist_requests_by_day_th"."product_channel_id" = "product_channels"."product_channel_id" and
					"blocklist_requests_by_day_th"."locale_id" = "locales"."locale_id"
					group by
					"dates"."year",
					"dates"."month",
					"dates"."day_of_month",
					"dates"."date",
					"products"."product_name",
					"products"."formatted_version_major",
					"products"."product_version",
					"locations"."continent_name",
					"locations"."country_name",
					"product_channels"."product_channel",
					"locales"."code";

					SELECT PARTITION_TABLE('a_th_blocklist_locale_location_channel');

				</InsertQuery>
    <!--

				IncrementConditionFrom and IncrementConditionWhere are javascript functions who's
				output will be inserted in the incremental query condition, in the place of the
				token ${INCREMENT_CONDITION_FROM} and ${INCREMENT_CONDITION_WHERE}
				Use when extra filtering logic is needed, like exclude today's date from the list of info
				to be extracted, eg:
				<IncrementConditionWhere>
						<![CDATA[
						var a = function(){
								var now  = new Date();
								return " and  date <= " +  (now.getYear()+ 1900) + "-" + (now.getMonth()+1) + "-" + now.getDate()
						}
						a()
						]]>
				</IncrementConditionWhere>

				-->
    <IncrementConditionFrom/>
    <IncrementConditionWhere/>
  </AggregateInfo>
</GenericAggHandlerConfig>
