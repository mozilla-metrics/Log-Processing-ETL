<?xml version="1.0"?>
<!-- The contents of this file are subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this file,
   - You can obtain one at http://mozilla.org/MPL/2.0/.  -->
<GenericAggHandlerConfig>
	<Database>
		<Url>${VERTICA_GAH_DBURL}</Url>
		<Class>${VERTICA_DRIVER}</Class>
		<User>${VERTICA_USER}</User>
		<Pass>${VERTICA_PASS}</Pass>
	</Database>
	<AggregateInfo>
		<Table>blocklist_requests_by_day_th</Table>
		<CreateTableStatement>
CREATE TABLE blocklist_requests_by_day_th
(
    utc_date_id Integer NOT NULL,
    product_id Integer NOT NULL,
    os_id Integer NOT NULL,
    locale_id Integer NOT NULL,
    location_id Integer NOT NULL,
    product_channel_id Integer NOT NULL,
    product_distribution_id Integer NOT NULL,
    gecko_version Varchar(15),
    product_build_target Varchar(50),
    product_build_number Varchar(14),
    requests Integer,
    ping_count Integer,
    total_ping_count Integer,
    days_since_last_ping Integer
)
PARTITION BY ("datediff"('q', '2000-01-01 00:00:00', (date '1999-12-31 00:00:00' + (blocklist_requests_by_day_th.utc_date_id))));


ALTER TABLE blocklist_requests_by_day_th ADD CONSTRAINT fk_utc_date_id FOREIGN KEY (utc_date_id) references dates (date_id);
ALTER TABLE blocklist_requests_by_day_th ADD CONSTRAINT fk_location_id FOREIGN KEY (location_id) references locations_old (location_id);

CREATE PROJECTION blocklist_requests_by_day_th_super_1
(
 utc_date_id ENCODING RLE,
 product_id,
 os_id,
 locale_id ENCODING RLE,
 location_id,
 product_channel_id,
 product_distribution_id ENCODING RLE,
 gecko_version,
 product_build_target ENCODING RLE,
 product_build_number,
 requests,
 ping_count,
 total_ping_count,
 days_since_last_ping
)
AS
SELECT blocklist_requests_by_day_th.utc_date_id, blocklist_requests_by_day_th.product_id, blocklist_requests_by_day_th.os_id, blocklist_requests_by_day_th.locale_id, blocklist_requests_by_day_th.location_id, blocklist_requests_by_day_th.product_channel_id, blocklist_requests_by_day_th.product_distribution_id, blocklist_requests_by_day_th.gecko_version, blocklist_requests_by_day_th.product_build_target, blocklist_requests_by_day_th.product_build_number, blocklist_requests_by_day_th.requests, blocklist_requests_by_day_th.ping_count, blocklist_requests_by_day_th.total_ping_count, blocklist_requests_by_day_th.days_since_last_ping FROM public.blocklist_requests_by_day_th ORDER BY blocklist_requests_by_day_th.product_distribution_id, blocklist_requests_by_day_th.product_build_target, blocklist_requests_by_day_th.locale_id, blocklist_requests_by_day_th.utc_date_id
SEGMENTED BY hash(blocklist_requests_by_day_th.location_id, blocklist_requests_by_day_th.product_build_number, blocklist_requests_by_day_th.requests) ALL NODES;

CREATE PROJECTION blocklist_requests_by_day_th_super_2
(
 utc_date_id ENCODING RLE,
 product_id,
 os_id,
 locale_id ENCODING RLE,
 location_id,
 product_channel_id,
 product_distribution_id ENCODING RLE,
 gecko_version,
 product_build_target ENCODING RLE,
 product_build_number,
 requests,
 ping_count,
 total_ping_count,
 days_since_last_ping
)
AS
SELECT blocklist_requests_by_day_th.utc_date_id, blocklist_requests_by_day_th.product_id, blocklist_requests_by_day_th.os_id, blocklist_requests_by_day_th.locale_id, blocklist_requests_by_day_th.location_id, blocklist_requests_by_day_th.product_channel_id, blocklist_requests_by_day_th.product_distribution_id, blocklist_requests_by_day_th.gecko_version, blocklist_requests_by_day_th.product_build_target, blocklist_requests_by_day_th.product_build_number, blocklist_requests_by_day_th.requests, blocklist_requests_by_day_th.ping_count, blocklist_requests_by_day_th.total_ping_count, blocklist_requests_by_day_th.days_since_last_ping FROM public.blocklist_requests_by_day_th ORDER BY blocklist_requests_by_day_th.product_distribution_id, blocklist_requests_by_day_th.product_build_target, blocklist_requests_by_day_th.locale_id, blocklist_requests_by_day_th.utc_date_id
SEGMENTED BY hash(blocklist_requests_by_day_th.location_id, blocklist_requests_by_day_th.product_build_number, blocklist_requests_by_day_th.requests) ALL NODES OFFSET 1;

CREATE PROJECTION blocklist_requests_by_day_th_ymd_product_locale_location
(
 utc_date_id ENCODING RLE,
 product_id ENCODING RLE,
 locale_id ENCODING RLE,
 location_id ENCODING RLE,
 requests ENCODING RLE
)
AS
SELECT blocklist_requests_by_day_th.utc_date_id, blocklist_requests_by_day_th.product_id, blocklist_requests_by_day_th.locale_id, blocklist_requests_by_day_th.location_id, blocklist_requests_by_day_th.requests FROM public.blocklist_requests_by_day_th ORDER BY blocklist_requests_by_day_th.utc_date_id, blocklist_requests_by_day_th.product_id, blocklist_requests_by_day_th.locale_id, blocklist_requests_by_day_th.location_id, blocklist_requests_by_day_th.requests
SEGMENTED BY hash(blocklist_requests_by_day_th.location_id, blocklist_requests_by_day_th.requests) ALL NODES;

CREATE PROJECTION blocklist_requests_by_day_th_ymd_product_location_locale
(
 utc_date_id ENCODING RLE,
 product_id ENCODING RLE,
 locale_id ENCODING RLE,
 location_id ENCODING RLE,
 requests ENCODING RLE
)
AS
SELECT blocklist_requests_by_day_th.utc_date_id, blocklist_requests_by_day_th.product_id, blocklist_requests_by_day_th.locale_id, blocklist_requests_by_day_th.location_id, blocklist_requests_by_day_th.requests FROM public.blocklist_requests_by_day_th ORDER BY blocklist_requests_by_day_th.utc_date_id, blocklist_requests_by_day_th.product_id, blocklist_requests_by_day_th.location_id, blocklist_requests_by_day_th.locale_id, blocklist_requests_by_day_th.requests
SEGMENTED BY hash(blocklist_requests_by_day_th.location_id, blocklist_requests_by_day_th.requests) ALL NODES OFFSET 1;

CREATE PROJECTION blocklist_requests_by_day_th_gecver_node1_cm_metricsdb01
(
 gecko_version ENCODING RLE,
 utc_date_id
)
AS
SELECT blocklist_requests_by_day_th.gecko_version, blocklist_requests_by_day_th.utc_date_id FROM public.blocklist_requests_by_day_th ORDER BY blocklist_requests_by_day_th.gecko_version
UNSEGMENTED NODE v_metrics_node0001;

CREATE PROJECTION blocklist_requests_by_day_th_gecver_node2_cm_metricsdb02
(
 gecko_version ENCODING RLE,
 utc_date_id
)
AS
SELECT blocklist_requests_by_day_th.gecko_version, blocklist_requests_by_day_th.utc_date_id FROM public.blocklist_requests_by_day_th ORDER BY blocklist_requests_by_day_th.gecko_version
UNSEGMENTED NODE v_metrics_node0002;

CREATE PROJECTION blocklist_requests_by_day_th_gecver_node3_cm_metricsdb03
(
 gecko_version ENCODING RLE,
 utc_date_id
)
AS
SELECT blocklist_requests_by_day_th.gecko_version, blocklist_requests_by_day_th.utc_date_id FROM public.blocklist_requests_by_day_th ORDER BY blocklist_requests_by_day_th.gecko_version
UNSEGMENTED NODE v_metrics_node0003;

CREATE PROJECTION blocklist_requests_by_day_th_bldtarget_node1_cm_metricsdb01
(
 product_build_target ENCODING RLE,
 utc_date_id
)
AS
SELECT blocklist_requests_by_day_th.product_build_target, blocklist_requests_by_day_th.utc_date_id FROM public.blocklist_requests_by_day_th ORDER BY blocklist_requests_by_day_th.product_build_target
UNSEGMENTED NODE v_metrics_node0001;

CREATE PROJECTION blocklist_requests_by_day_th_bldtarget_node2_cm_metricsdb02
(
 product_build_target ENCODING RLE,
 utc_date_id
)
AS
SELECT blocklist_requests_by_day_th.product_build_target, blocklist_requests_by_day_th.utc_date_id FROM public.blocklist_requests_by_day_th ORDER BY blocklist_requests_by_day_th.product_build_target
UNSEGMENTED NODE v_metrics_node0002;

CREATE PROJECTION blocklist_requests_by_day_th_bldtarget_node3_cm_metricsdb03
(
 product_build_target ENCODING RLE,
 utc_date_id
)
AS
SELECT blocklist_requests_by_day_th.product_build_target, blocklist_requests_by_day_th.utc_date_id FROM public.blocklist_requests_by_day_th ORDER BY blocklist_requests_by_day_th.product_build_target
UNSEGMENTED NODE v_metrics_node0003;

CREATE PROJECTION blocklist_requests_by_day_th_bldnum_node1_cm_metricsdb01
(
 product_build_number ENCODING RLE,
 utc_date_id
)
AS
SELECT blocklist_requests_by_day_th.product_build_number, blocklist_requests_by_day_th.utc_date_id FROM public.blocklist_requests_by_day_th ORDER BY blocklist_requests_by_day_th.product_build_number
UNSEGMENTED NODE v_metrics_node0001;

CREATE PROJECTION blocklist_requests_by_day_th_bldnum_node2_cm_metricsdb02
(
 product_build_number ENCODING RLE,
 utc_date_id
)
AS
SELECT blocklist_requests_by_day_th.product_build_number, blocklist_requests_by_day_th.utc_date_id FROM public.blocklist_requests_by_day_th ORDER BY blocklist_requests_by_day_th.product_build_number
UNSEGMENTED NODE v_metrics_node0002;

CREATE PROJECTION blocklist_requests_by_day_th_bldnum_node3_cm_metricsdb03
(
 product_build_number ENCODING RLE,
 utc_date_id
)
AS
SELECT blocklist_requests_by_day_th.product_build_number, blocklist_requests_by_day_th.utc_date_id FROM public.blocklist_requests_by_day_th ORDER BY blocklist_requests_by_day_th.product_build_number
UNSEGMENTED NODE v_metrics_node0003;


SELECT MARK_DESIGN_KSAFE(1);
		</CreateTableStatement>
		<TableExistsStatement>select count(1) from blocklist_requests_by_day_th</TableExistsStatement>
		<DropTableStatement>drop table blocklist_requests_by_day_th cascade</DropTableStatement>

		<!-- AggregateMode can be TRUNCATE or INCREMENT;
		
		TRUNCATE will issue a DROP TABLE and recreate it. 
		INCREMENT will try to find the new objects and insert only those 
		
		-->
		
		<AggregateMode>INCREMENT</AggregateMode>

		<!-- QueryOnFact and QueryOnAggregate must return a single column named "value" -->

		<QueryOnFact>
SELECT utc_date_id as value FROM blocklist_requests_by_day group by utc_date_id;
		</QueryOnFact>
		<QueryOnAggregate>
SELECT utc_date_id as value FROM blocklist_requests_by_day_th group by utc_date_id;
		</QueryOnAggregate>
		<QuoteValue>true</QuoteValue>
		<IncrementQuery>

			INSERT /*+ direct */ INTO "blocklist_requests_by_day_th" (
                   "utc_date_id",
                   "product_id",
                   "os_id",
                   "locale_id",
                   "location_id",
                   "product_channel_id",
                   "product_distribution_id",
                   "gecko_version",
                   "product_build_target",
                   "product_build_number",
                   "requests",
                   "ping_count",
                   "total_ping_count",
                   "days_since_last_ping")
            select 
                   f."utc_date_id",
                   f."product_id",
                   f."os_id",
                   f."locale_id",
                   f."location_id",
                   f."product_channel_id",
                   f."product_distribution_id",
                   f."gecko_version",
                   f."product_build_target",
                   f."product_build_number",
                   f."requests",
                   f."ping_count",
                   f."total_ping_count",
                   f."days_since_last_ping"
            from blocklist_requests_by_day f, products d
                       where f.product_id = d.product_id and d.product_name = 'Thunderbird' and utc_date_id in (${INCREMENT_LIST});
		</IncrementQuery>
		
		<InsertQuery>

			INSERT /*+ direct */ INTO "blocklist_requests_by_day_th" (
                   "utc_date_id",
                   "product_id",
                   "os_id",
                   "locale_id",
                   "location_id",
                   "product_channel_id",
                   "product_distribution_id",
                   "gecko_version",
                   "product_build_target",
                   "product_build_number",
                   "requests",
                   "ping_count",
                   "total_ping_count",
                   "days_since_last_ping")
            select 
                   f."utc_date_id",
                   f."product_id",
                   f."os_id",
                   f."locale_id",
                   f."location_id",
                   f."product_channel_id",
                   f."product_distribution_id",
                   f."gecko_version",
                   f."product_build_target",
                   f."product_build_number",
                   f."requests",
                   f."ping_count",
                   f."total_ping_count",
                   f."days_since_last_ping"
		from blocklist_requests_by_day f, products d
                       where f.product_id = d.product_id and d.product_name = 'Thunderbird';
		</InsertQuery>

		<!--
			
		IncrementConditionFrom and IncrementConditionWhere are javascript functions who's 
		output will be inserted in the incremental query condition, in the place of the
		token ${INCREMENT_CONDITION_FROM} and ${INCREMENT_CONDITION_WHERE}

		Use when extra filtering logic is needed, like exclude today's date from the list of info
		to be extracted, eg:

		<IncrementConditionWhere>
			<![CDATA[
			var a = function(){
				var now  = new Date();
				return " and  date <= " +  (now.getYear()+ 1900) + "-" + (now.getMonth()+1) + "-" + now.getDate()
			}
			a()
			]]>
		</IncrementConditionWhere>

		-->

		<IncrementConditionFrom/>
		<IncrementConditionWhere/>

	</AggregateInfo>
	
</GenericAggHandlerConfig>
