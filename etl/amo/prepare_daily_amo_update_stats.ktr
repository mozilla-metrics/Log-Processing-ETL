<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>prepare_daily_amo_update_stats</name>
    <description/>
    <extended_description>&#xa;The contents of this file are subject to the terms of the Mozilla Public&#xa;License, v. 2.0. If a copy of the MPL was not distributed with this file,&#xa;You can obtain one at http&#x3a;&#x2f;&#x2f;mozilla.org&#x2f;MPL&#x2f;2.0&#x2f;.&#xa;    </extended_description>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>&#x2f;</directory>
    <parameters>
        <parameter>
            <name>DATE</name>
            <default_value>&#x3d; CURRENT_DATE</default_value>
            <description>null</description>
        </parameter>
    </parameters>
    <log>
<trans-log-table><connection/>
<schema/>
<table></table>
<size_limit_lines>5000</size_limit_lines>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>N</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject/></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject/></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject/></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject/></field><field><id>LINES_REJECTED</id><enabled>N</enabled><name>LINES_REJECTED</name><subject/></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>Y</enabled><name>LOG_FIELD</name></field></trans-log-table>
<perf-log-table><connection/>
<schema/>
<table/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>
<channel-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>
<step-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>Y</unique_connections>
    <feedback_shown>N</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit/>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <created_user/>
  <created_date>2012&#x2f;03&#x2f;26 15&#x3a;43&#x3a;30.787</created_date>
  <modified_user>-</modified_user>
  <modified_date>2009&#x2f;02&#x2f;04 10&#x3a;21&#x3a;47.657</modified_date>
  </info>
  <notepads>
    <notepad>
      <note>These SQL are now in a dedicated ktr because sometimes&#xa;there was a deadlock inside vertica driver.&#xa;The blocking steps assure that the queries are not run in&#xa;parallel.</note>
      <xloc>10</xloc>
      <yloc>8</yloc>
      <width>281</width>
      <heigth>54</heigth>
      <fontname>Arial</fontname>
      <fontsize>10</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <connection>
    <name>metrics</name>
    <server>&#x24;&#x7b;METRICS_VERTICA_HOST&#x7d;</server>
    <type>GENERIC</type>
    <access>Native</access>
    <database>&#x24;&#x7b;METRICS_VERTICA_DATABASE&#x7d;</database>
    <port>&#x24;&#x7b;METRICS_VERTICA_PORT&#x7d;</port>
    <username>&#x24;&#x7b;METRICS_VERTICA_USER&#x7d;</username>
    <password>&#x24;&#x7b;METRICS_VERTICA_PASS&#x7d;</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>CUSTOM_DRIVER_CLASS</code><attribute>com.vertica.jdbc.Driver</attribute></attribute>
      <attribute><code>CUSTOM_URL</code><attribute>jdbc&#x3a;vertica&#x3a;&#x2f;&#x2f;&#x24;&#x7b;METRICS_VERTICA_HOST&#x7d;&#x3a;&#x24;&#x7b;METRICS_VERTICA_PORT&#x7d;&#x2f;&#x24;&#x7b;METRICS_VERTICA_DATABASE&#x7d;</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>&#x24;&#x7b;METRICS_VERTICA_PORT&#x7d;</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>Y</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <order>
  <hop> <from>aggregate addon_version</from><to>aggregate_addon_version.dump</to><enabled>Y</enabled> </hop>
  <hop> <from>aggregate addon_status</from><to>aggregate_addon_status.dump</to><enabled>Y</enabled> </hop>
  <hop> <from>Generate 1 Row</from><to>wait for&#x3a; aggregate_addon_version.dump</to><enabled>Y</enabled> </hop>
  <hop> <from>wait for&#x3a; aggregate_addon_version.dump</from><to>aggregate addon_status</to><enabled>Y</enabled> </hop>
  <hop> <from>aggregate product_guid_version</from><to>aggregate product_guid_version.dump</to><enabled>Y</enabled> </hop>
  <hop> <from>aggregate product_locale</from><to>aggregate_product_locale.dump</to><enabled>Y</enabled> </hop>
  <hop> <from>aggregate product_os</from><to>aggregate product_os.dump</to><enabled>Y</enabled> </hop>
  <hop> <from>Generate 1 Row</from><to>wait for&#x3a; aggregate_addon_status.dump</to><enabled>Y</enabled> </hop>
  <hop> <from>Generate 1 Row</from><to>wait for&#x3a; aggregate product_os.dump</to><enabled>Y</enabled> </hop>
  <hop> <from>Generate 1 Row</from><to>wait for&#x3a; aggregate_product_locale.dump</to><enabled>Y</enabled> </hop>
  <hop> <from>wait for&#x3a; aggregate product_os.dump</from><to>aggregate product_locale</to><enabled>Y</enabled> </hop>
  <hop> <from>wait for&#x3a; aggregate_addon_status.dump</from><to>aggregate product_os</to><enabled>Y</enabled> </hop>
  <hop> <from>wait for&#x3a; aggregate_product_locale.dump</from><to>aggregate product_guid_version</to><enabled>Y</enabled> </hop>
  </order>
  <step>
    <name>Generate 1 Row</name>
    <type>RowGenerator</type>
    <description/>
    <distribute>N</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>
      <field>
        <name>one</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>1</nullif>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <limit>1</limit>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>417</xloc>
      <yloc>11</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate addon_status</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>metrics</connection>
    <sql>select&#xa;  DATE&#x28;date&#x29;&#x3a;&#x3a;TIMESTAMP as date&#xa;, addon_id&#xa;, CASE LEFT&#x28;addon_status, 4&#x29; WHEN &#x27;user&#x27; THEN REPLACE&#x28;addon_status, &#x27;&#x25;2C&#x27;,&#x27;,&#x27;&#x29; ELSE &#x27;null&#x27; END as addon_status&#xa;, sum&#x28;requests&#x29; as addon_status_sum&#xa;from versioncheck_requests_by_day vc&#xa;join dates d on vc.utc_date_id &#x3d; d.date_id&#xa;WHERE DATE&#x28;date&#x29; &#x24;&#x7b;DATE&#x7d;&#xa;and addon_id &#x3c;&#x3e; 0&#xa;and &#x28;&#x3f; &#x3d; 1&#x29; -- hack to get the query to wait for input&#xa;group by date, addon_id, addon_status&#xa;order by date, addon_id</sql>
    <limit>0</limit>
    <lookup>wait for&#x3a; aggregate_addon_version.dump</lookup>
    <execute_each_row>Y</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>236</xloc>
      <yloc>201</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate addon_version</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>metrics</connection>
    <sql>select&#xa;  DATE&#x28;date&#x29;&#x3a;&#x3a;TIMESTAMP as date&#xa;, addon_id&#xa;, COALESCE&#x28;REPLACE&#x28;addon_version, &#x27;Unknown&#x27;, &#x27;null&#x27;&#x29;, &#x27;null&#x27;&#x29; as addon_version&#xa;, sum&#x28;requests&#x29; as addon_version_sum&#xa;from versioncheck_requests_by_day vc&#xa;join dates d on vc.utc_date_id &#x3d; d.date_id&#xa;WHERE DATE&#x28;date&#x29; &#x24;&#x7b;DATE&#x7d;&#xa;and addon_id &#x3c;&#x3e; 0&#xa;group by 1, 2, 3&#xa;order by 1, 2, 3</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>66</xloc>
      <yloc>201</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate product_guid_version</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>metrics</connection>
    <sql>select&#xa;  DATE&#x28;date&#x29;&#x3a;&#x3a;TIMESTAMP as date&#xa;, addon_id&#xa;, REPLACE&#x28;product_guid, &#x27;Unknown&#x27;, &#x27;null&#x27;&#x29; as product_guid&#xa;, REPLACE&#x28;product_version, &#x27;Unknown&#x27;, &#x27;null&#x27;&#x29; as product_version&#xa;, sum&#x28;requests&#x29; as product_guid_version_sum&#xa;from versioncheck_requests_by_day vc&#xa;join dates d on vc.utc_date_id &#x3d; d.date_id&#xa;join products p on vc.product_id &#x3d; p.product_id&#xa;WHERE DATE&#x28;date&#x29; &#x24;&#x7b;DATE&#x7d;&#xa;and addon_id &#x3c;&#x3e; 0&#xa;and &#x28;&#x3f; &#x3d; 1&#x29; -- hack to get the query to wait for input&#xa;group by date, addon_id, product_guid, product_version&#xa;order by date, addon_id, product_guid</sql>
    <limit>0</limit>
    <lookup>wait for&#x3a; aggregate_product_locale.dump</lookup>
    <execute_each_row>Y</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>769</xloc>
      <yloc>201</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate product_guid_version.dump</name>
    <type>CubeOutput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <file>
      <name>aggregate product_guid_version.dump</name>
      <add_to_result_filenames>N</add_to_result_filenames>
      <do_not_open_newfile_init>N</do_not_open_newfile_init>
    </file>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>769</xloc>
      <yloc>278</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate product_locale</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>metrics</connection>
    <sql>select&#xa;  DATE&#x28;date&#x29;&#x3a;&#x3a;TIMESTAMP as date&#xa;, addon_id&#xa;, REPLACE&#x28;product_locale, &#x27;Unknown&#x27;, &#x27;null&#x27;&#x29; as locale&#xa;, sum&#x28;requests&#x29; as locale_sum&#xa;from versioncheck_requests_by_day vc&#xa;join dates d on vc.utc_date_id &#x3d; d.date_id&#xa;WHERE DATE&#x28;date&#x29; &#x24;&#x7b;DATE&#x7d;&#xa;and addon_id &#x3c;&#x3e; 0&#xa;and &#x28;&#x3f; &#x3d; 1&#x29; -- hack to get the query to wait for input&#xa;group by date, addon_id, product_locale&#xa;order by date, addon_id</sql>
    <limit>0</limit>
    <lookup>wait for&#x3a; aggregate product_os.dump</lookup>
    <execute_each_row>Y</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>579</xloc>
      <yloc>200</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate product_os</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>metrics</connection>
    <sql>select&#xa;  DATE&#x28;date&#x29;&#x3a;&#x3a;TIMESTAMP as date&#xa;, addon_id&#xa;, DECODE&#x28;LEFT&#x28;product_os,1&#x29;,&#x27;0&#x27;,&#x27;null&#x27;,&#x27;1&#x27;,&#x27;null&#x27;,&#x27;2&#x27;,&#x27;null&#x27;,REPLACE&#x28;product_os, &#x27;Unknown&#x27;, &#x27;null&#x27;&#x29;&#x29; AS os&#xa;, sum&#x28;requests&#x29; as os_sum&#xa;from versioncheck_requests_by_day vc&#xa;join dates d on vc.utc_date_id &#x3d; d.date_id&#xa;WHERE DATE&#x28;date&#x29; &#x24;&#x7b;DATE&#x7d;&#xa;and addon_id &#x3c;&#x3e; 0&#xa;and &#x28;&#x3f; &#x3d; 1&#x29; -- hack to get the query to wait for input&#xa;group by date, addon_id, product_os&#xa;order by date, addon_id</sql>
    <limit>0</limit>
    <lookup>wait for&#x3a; aggregate_addon_status.dump</lookup>
    <execute_each_row>Y</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>417</xloc>
      <yloc>201</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate product_os.dump</name>
    <type>CubeOutput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <file>
      <name>aggregate product_os.dump</name>
      <add_to_result_filenames>N</add_to_result_filenames>
      <do_not_open_newfile_init>N</do_not_open_newfile_init>
    </file>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>417</xloc>
      <yloc>278</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate_addon_status.dump</name>
    <type>CubeOutput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <file>
      <name>aggregate_addon_status.dump</name>
      <add_to_result_filenames>N</add_to_result_filenames>
      <do_not_open_newfile_init>N</do_not_open_newfile_init>
    </file>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>236</xloc>
      <yloc>278</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate_addon_version.dump</name>
    <type>CubeOutput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <file>
      <name>aggregate_addon_version.dump</name>
      <add_to_result_filenames>N</add_to_result_filenames>
      <do_not_open_newfile_init>N</do_not_open_newfile_init>
    </file>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>66</xloc>
      <yloc>278</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate_product_locale.dump</name>
    <type>CubeOutput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <file>
      <name>aggregate_product_locale.dump</name>
      <add_to_result_filenames>N</add_to_result_filenames>
      <do_not_open_newfile_init>N</do_not_open_newfile_init>
    </file>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>579</xloc>
      <yloc>277</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>wait for&#x3a; aggregate product_os.dump</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <steps>
      <step>
        <name>aggregate product_os.dump</name>
        <CopyNr>0</CopyNr>
        </step>
      </steps>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>579</xloc>
      <yloc>106</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>wait for&#x3a; aggregate_addon_status.dump</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <steps>
      <step>
        <name>aggregate_addon_status.dump</name>
        <CopyNr>0</CopyNr>
        </step>
      </steps>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>417</xloc>
      <yloc>134</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>wait for&#x3a; aggregate_addon_version.dump</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <steps>
      <step>
        <name>aggregate_addon_version.dump</name>
        <CopyNr>0</CopyNr>
        </step>
      </steps>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>236</xloc>
      <yloc>109</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>wait for&#x3a; aggregate_product_locale.dump</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <steps>
      <step>
        <name>aggregate_product_locale.dump</name>
        <CopyNr>0</CopyNr>
        </step>
      </steps>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>769</xloc>
      <yloc>129</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>
</transformation>
