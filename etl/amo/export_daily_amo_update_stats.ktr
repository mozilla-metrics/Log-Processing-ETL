<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>export_daily_amo_update_stats</name>
    <description/>
    <extended_description>&#xa;The contents of this file are subject to the terms of the Mozilla Public&#xa;License, v. 2.0. If a copy of the MPL was not distributed with this file,&#xa;You can obtain one at http&#x3a;&#x2f;&#x2f;mozilla.org&#x2f;MPL&#x2f;2.0&#x2f;.&#xa;    </extended_description>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>&#x2f;</directory>
    <parameters>
        <parameter>
            <name>DATE</name>
            <default_value>&#x3d; CURRENT_DATE</default_value>
            <description>null</description>
        </parameter>
    </parameters>
    <log>
<trans-log-table><connection/>
<schema/>
<table></table>
<size_limit_lines>5000</size_limit_lines>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>N</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject>Merge Join 3</subject></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject>Select values</subject></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject>Output to AMO</subject></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject>Output to AMO</subject></field><field><id>LINES_REJECTED</id><enabled>N</enabled><name>LINES_REJECTED</name><subject>Output to AMO</subject></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>Y</enabled><name>LOG_FIELD</name></field></trans-log-table>
<perf-log-table><connection/>
<schema/>
<table/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>
<channel-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>
<step-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>Y</unique_connections>
    <feedback_shown>N</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit/>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <created_user/>
  <created_date>2012&#x2f;03&#x2f;26 15&#x3a;43&#x3a;30.787</created_date>
  <modified_user>-</modified_user>
  <modified_date>2009&#x2f;02&#x2f;04 10&#x3a;21&#x3a;47.657</modified_date>
  </info>
  <notepads>
  </notepads>
  <connection>
    <name>amo master</name>
    <server>&#x24;&#x7b;AMO_MASTER_HOST&#x7d;</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>&#x24;&#x7b;AMO_MASTER_DATABASE&#x7d;</database>
    <port>&#x24;&#x7b;AMO_MASTER_PORT&#x7d;</port>
    <username>&#x24;&#x7b;AMO_MASTER_USER&#x7d;</username>
    <password>&#x24;&#x7b;AMO_MASTER_PASS&#x7d;</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>EXTRA_OPTION_MYSQL.characterEncoding</code><attribute>UTF-8</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.useUnicode</code><attribute>true</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>&#x24;&#x7b;AMO_MASTER_PORT&#x7d;</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>STREAM_RESULTS</code><attribute>Y</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <order>
  <hop> <from>Group by addon_id</from><to>Serialize addon_versions</to><enabled>Y</enabled> </hop>
  <hop> <from>Group by addon_id 2</from><to>Serialize addon_statuses</to><enabled>Y</enabled> </hop>
  <hop> <from>Group by addon_id 3</from><to>Serialize oses</to><enabled>Y</enabled> </hop>
  <hop> <from>Group by addon_id 5</from><to>Serialize applications</to><enabled>Y</enabled> </hop>
  <hop> <from>Group by product_guid</from><to>Group by addon_id 5</to><enabled>Y</enabled> </hop>
  <hop> <from>Merge Join</from><to>Merge Join 2</to><enabled>Y</enabled> </hop>
  <hop> <from>Merge Join 2</from><to>Merge Join 3</to><enabled>Y</enabled> </hop>
  <hop> <from>Select values</from><to>Output to AMO</to><enabled>Y</enabled> </hop>
  <hop> <from>Serialize addon_statuses</from><to>Merge Join</to><enabled>Y</enabled> </hop>
  <hop> <from>Serialize addon_versions</from><to>Merge Join</to><enabled>Y</enabled> </hop>
  <hop> <from>Serialize oses</from><to>Merge Join 2</to><enabled>Y</enabled> </hop>
  <hop> <from>Output to AMO</from><to>Count inserts</to><enabled>Y</enabled> </hop>
  <hop> <from>Count inserts</from><to>Log inserts</to><enabled>Y</enabled> </hop>
  <hop> <from>Delete update records</from><to>Log deletes</to><enabled>Y</enabled> </hop>
  <hop> <from>Group by addon_id 4</from><to>Serialize locales</to><enabled>Y</enabled> </hop>
  <hop> <from>Serialize locales</from><to>Merge Join 3</to><enabled>Y</enabled> </hop>
  <hop> <from>Merge Join 3</from><to>Merge Join 4</to><enabled>Y</enabled> </hop>
  <hop> <from>Merge Join 4</from><to>Select values</to><enabled>Y</enabled> </hop>
  <hop> <from>Serialize applications</from><to>Merge Join 4</to><enabled>Y</enabled> </hop>
  <hop> <from>Wrap guids with braces</from><to>Group by product_guid</to><enabled>Y</enabled> </hop>
  <hop> <from>aggregate_addon_version.dump</from><to>Group by addon_id</to><enabled>Y</enabled> </hop>
  <hop> <from>aggregate_addon_status.dump</from><to>Group by addon_id 2</to><enabled>Y</enabled> </hop>
  <hop> <from>aggregate product_os.dump</from><to>Group by addon_id 3</to><enabled>Y</enabled> </hop>
  <hop> <from>aggregate_product_locale.dump</from><to>Group by addon_id 4</to><enabled>Y</enabled> </hop>
  <hop> <from>aggregate product_guid_version.dump</from><to>Wrap guids with braces</to><enabled>Y</enabled> </hop>
  </order>
  <step>
    <name>Count inserts</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <all_rows>N</all_rows>
      <ignore_aggregate>N</ignore_aggregate>
      <field_ignore/>
      <directory>&#x25;&#x25;java.io.tmpdir&#x25;&#x25;</directory>
      <prefix>grp</prefix>
      <add_linenr>N</add_linenr>
      <linenr_fieldname/>
      <give_back_row>Y</give_back_row>
      <group>
      </group>
      <fields>
        <field>
          <aggregate>num_inserts</aggregate>
          <subject>addon_id</subject>
          <type>COUNT_ALL</type>
          <valuefield/>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>550</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Delete update records</name>
    <type>ExecSQL</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>amo master</connection>
    <execute_each_row>N</execute_each_row>
    <single_statement>N</single_statement>
    <replace_variables>Y</replace_variables>
    <sql>DELETE FROM update_counts&#xa;WHERE date &#x24;&#x7b;DATE&#x7d;</sql>
    <insert_field/>
    <update_field/>
    <delete_field>update_deletes</delete_field>
    <read_field/>
    <arguments>
    </arguments>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>650</xloc>
      <yloc>50</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Group by addon_id</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <all_rows>N</all_rows>
      <ignore_aggregate>N</ignore_aggregate>
      <field_ignore/>
      <directory>&#x25;&#x25;java.io.tmpdir&#x25;&#x25;</directory>
      <prefix>grp</prefix>
      <add_linenr>N</add_linenr>
      <linenr_fieldname/>
      <give_back_row>N</give_back_row>
      <group>
        <field>
          <name>date</name>
        </field>
        <field>
          <name>addon_id</name>
        </field>
      </group>
      <fields>
        <field>
          <aggregate>addon_versions</aggregate>
          <subject>addon_version</subject>
          <type>CONCAT_STRING</type>
          <valuefield>&#x7e;&#x7e;&#x7e;</valuefield>
        </field>
        <field>
          <aggregate>addon_version_sums</aggregate>
          <subject>addon_version_sum</subject>
          <type>CONCAT_STRING</type>
          <valuefield>&#x7e;&#x7e;&#x7e;</valuefield>
        </field>
        <field>
          <aggregate>addon_id_sum</aggregate>
          <subject>addon_version_sum</subject>
          <type>SUM</type>
          <valuefield/>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>50</xloc>
      <yloc>150</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Group by addon_id 2</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <all_rows>N</all_rows>
      <ignore_aggregate>N</ignore_aggregate>
      <field_ignore/>
      <directory>&#x25;&#x25;java.io.tmpdir&#x25;&#x25;</directory>
      <prefix>grp</prefix>
      <add_linenr>N</add_linenr>
      <linenr_fieldname/>
      <give_back_row>N</give_back_row>
      <group>
        <field>
          <name>date</name>
        </field>
        <field>
          <name>addon_id</name>
        </field>
      </group>
      <fields>
        <field>
          <aggregate>addon_statuses</aggregate>
          <subject>addon_status</subject>
          <type>CONCAT_STRING</type>
          <valuefield>&#x7e;&#x7e;&#x7e;</valuefield>
        </field>
        <field>
          <aggregate>addon_status_sums</aggregate>
          <subject>addon_status_sum</subject>
          <type>CONCAT_STRING</type>
          <valuefield>&#x7e;&#x7e;&#x7e;</valuefield>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>150</xloc>
      <yloc>150</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Group by addon_id 3</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <all_rows>N</all_rows>
      <ignore_aggregate>N</ignore_aggregate>
      <field_ignore/>
      <directory>&#x25;&#x25;java.io.tmpdir&#x25;&#x25;</directory>
      <prefix>grp</prefix>
      <add_linenr>N</add_linenr>
      <linenr_fieldname/>
      <give_back_row>N</give_back_row>
      <group>
        <field>
          <name>date</name>
        </field>
        <field>
          <name>addon_id</name>
        </field>
      </group>
      <fields>
        <field>
          <aggregate>oses</aggregate>
          <subject>os</subject>
          <type>CONCAT_STRING</type>
          <valuefield>&#x7e;&#x7e;&#x7e;</valuefield>
        </field>
        <field>
          <aggregate>os_sums</aggregate>
          <subject>os_sum</subject>
          <type>CONCAT_STRING</type>
          <valuefield>&#x7e;&#x7e;&#x7e;</valuefield>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>250</xloc>
      <yloc>150</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Group by addon_id 4</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <all_rows>N</all_rows>
      <ignore_aggregate>N</ignore_aggregate>
      <field_ignore/>
      <directory>&#x25;&#x25;java.io.tmpdir&#x25;&#x25;</directory>
      <prefix>grp</prefix>
      <add_linenr>N</add_linenr>
      <linenr_fieldname/>
      <give_back_row>N</give_back_row>
      <group>
        <field>
          <name>date</name>
        </field>
        <field>
          <name>addon_id</name>
        </field>
      </group>
      <fields>
        <field>
          <aggregate>locales</aggregate>
          <subject>locale</subject>
          <type>CONCAT_STRING</type>
          <valuefield>&#x7e;&#x7e;&#x7e;</valuefield>
        </field>
        <field>
          <aggregate>locale_sums</aggregate>
          <subject>locale_sum</subject>
          <type>CONCAT_STRING</type>
          <valuefield>&#x7e;&#x7e;&#x7e;</valuefield>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>350</xloc>
      <yloc>150</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Group by addon_id 5</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <all_rows>N</all_rows>
      <ignore_aggregate>N</ignore_aggregate>
      <field_ignore/>
      <directory>&#x25;&#x25;java.io.tmpdir&#x25;&#x25;</directory>
      <prefix>grp</prefix>
      <add_linenr>N</add_linenr>
      <linenr_fieldname/>
      <give_back_row>N</give_back_row>
      <group>
        <field>
          <name>date</name>
        </field>
        <field>
          <name>addon_id</name>
        </field>
      </group>
      <fields>
        <field>
          <aggregate>product_guids</aggregate>
          <subject>product_guid</subject>
          <type>CONCAT_STRING</type>
          <valuefield>&#x7e;&#x7e;&#x7e;</valuefield>
        </field>
        <field>
          <aggregate>product_versions</aggregate>
          <subject>product_versions</subject>
          <type>CONCAT_STRING</type>
          <valuefield>&#x7e;&#x7e;&#x7e;</valuefield>
        </field>
        <field>
          <aggregate>product_version_sums</aggregate>
          <subject>product_version_sums</subject>
          <type>CONCAT_STRING</type>
          <valuefield>&#x7e;&#x7e;&#x7e;</valuefield>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>550</xloc>
      <yloc>150</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Group by product_guid</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <all_rows>N</all_rows>
      <ignore_aggregate>N</ignore_aggregate>
      <field_ignore/>
      <directory>&#x25;&#x25;java.io.tmpdir&#x25;&#x25;</directory>
      <prefix>grp</prefix>
      <add_linenr>N</add_linenr>
      <linenr_fieldname/>
      <give_back_row>N</give_back_row>
      <group>
        <field>
          <name>date</name>
        </field>
        <field>
          <name>addon_id</name>
        </field>
        <field>
          <name>product_guid</name>
        </field>
      </group>
      <fields>
        <field>
          <aggregate>product_versions</aggregate>
          <subject>product_version</subject>
          <type>CONCAT_STRING</type>
          <valuefield>&#x7e;&#x2b;&#x7e;</valuefield>
        </field>
        <field>
          <aggregate>product_version_sums</aggregate>
          <subject>product_guid_version_sum</subject>
          <type>CONCAT_STRING</type>
          <valuefield>&#x7e;&#x2b;&#x7e;</valuefield>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>450</xloc>
      <yloc>150</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Log deletes</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <optimizationLevel/>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>writeToLog&#x28;&#x22;m&#x22;, &#x22;Deleted &#x22;&#x2b;update_deletes&#x2b;&#x22; records from AMO master DB table update_counts for date &#x22;&#x2b;getVariable&#x28;&#x22;DATE&#x22;,&#x22;uninitialized&#x22;&#x29;&#x29;&#x3b;&#xa;</jsScript_script>
      </jsScript>    </jsScripts>    <fields>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>650</xloc>
      <yloc>150</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Log inserts</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <optimizationLevel/>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>writeToLog&#x28;&#x22;m&#x22;, &#x22;Inserted &#x22;&#x2b;num_inserts&#x2b;&#x22; records to AMO master DB table update_counts matching criteria date &#x22;&#x2b;getVariable&#x28;&#x22;DATE&#x22;,&#x22;uninitialized&#x22;&#x29;&#x29;&#x3b;&#xa;</jsScript_script>
      </jsScript>    </jsScripts>    <fields>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>650</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Merge Join</name>
    <type>MergeJoin</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
<join_type>INNER</join_type>
<step1>Serialize addon_versions</step1>
<step2>Serialize addon_statuses</step2>
    <keys_1>
      <key>date</key>
      <key>addon_id</key>
    </keys_1>
    <keys_2>
      <key>date</key>
      <key>addon_id</key>
    </keys_2>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>150</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Merge Join 2</name>
    <type>MergeJoin</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
<join_type>INNER</join_type>
<step1>Merge Join</step1>
<step2>Serialize oses</step2>
    <keys_1>
      <key>date</key>
      <key>addon_id</key>
    </keys_1>
    <keys_2>
      <key>date</key>
      <key>addon_id</key>
    </keys_2>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>250</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Merge Join 3</name>
    <type>MergeJoin</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
<join_type>INNER</join_type>
<step1>Merge Join 2</step1>
<step2>Serialize locales</step2>
    <keys_1>
      <key>date</key>
      <key>addon_id</key>
    </keys_1>
    <keys_2>
      <key>date</key>
      <key>addon_id</key>
    </keys_2>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>350</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Merge Join 4</name>
    <type>MergeJoin</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
<join_type>INNER</join_type>
<step1>Merge Join 3</step1>
<step2>Serialize applications</step2>
    <keys_1>
      <key>date</key>
      <key>addon_id</key>
    </keys_1>
    <keys_2>
      <key>date</key>
      <key>addon_id</key>
    </keys_2>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>450</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Output to AMO</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>amo master</connection>
    <schema/>
    <table>update_counts</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>N</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
    </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>650</xloc>
      <yloc>250</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Select values</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>      <field>        <name>addon_id</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>addon_id_sum</name>
        <rename>count</rename>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>version</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>status</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>application</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>os</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>locale</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>date</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>        <select_unspecified>N</select_unspecified>
    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>550</xloc>
      <yloc>250</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Serialize addon_statuses</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <optimizationLevel/>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>var keys &#x3d; addon_statuses.split&#x28;&#x27;&#x7e;&#x7e;&#x7e;&#x27;&#x29;&#x3b;&#xa;var values &#x3d; addon_status_sums.split&#x28;&#x27;&#x7e;&#x7e;&#x7e;&#x27;&#x29;&#x3b;&#xa;&#x2f;&#x2f; These two arrays are guaranteed to be the same length.&#xa;if &#x28;keys.length &#x21;&#x3d; values.length&#x29; throw new Error&#x28;&#x22;Key&#x2f;Value array size mismatch&#x22;&#x29;&#x3b;&#xa;&#xa;var hash &#x3d; &#x7b;&#x7d;&#x3b;&#xa;for &#x28;var i &#x3d; 0&#x3b; i &#x3c; keys.length&#x3b; i&#x2b;&#x2b;&#x29; &#x7b;&#xa;	hash&#x5b;keys&#x5b;i&#x5d;&#x5d; &#x3d; parseInt&#x28;values&#x5b;i&#x5d;&#x29;&#x3b;&#xa;&#x7d;&#xa;&#xa;var string &#x3d; serialize&#x28;hash&#x29;&#x3b;</jsScript_script>
      </jsScript>      <jsScript>        <jsScript_type>1</jsScript_type>
        <jsScript_name>JSON functions</jsScript_name>
        <jsScript_script>function convert&#x28;string&#x29; &#x7b;&#xa;    &#x2f;&#x2f; Convert a string into a 1-element array serialized in the PHP format.&#xa;    &#x2f;&#x2f; &#x3e;&#x3e;&#x3e; convert&#x28;&#x27;foo&#x27;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x27;a&#x3a;1&#x3a;&#x7b;i&#x3a;0&#x3b;s&#x3a;3&#x3a;&#x22;foo&#x22;&#x3b;&#x7d;&#x27;&#xa;    return serialize&#x28;&#x5b;string&#x5d;&#x29;&#x3b;&#xa;&#x7d;&#xa;&#xa;&#xa;function serialize&#x28; mixed_value &#x29; &#x7b;&#xa;    &#x2f;&#x2f; http&#x3a;&#x2f;&#x2f;kevin.vanzonneveld.net&#xa;    &#x2f;&#x2f; &#x2b;   original by&#x3a; Arpad Ray &#x28;mailto&#x3a;arpad&#x40;php.net&#x29;&#xa;    &#x2f;&#x2f; &#x2b;   improved by&#x3a; Dino&#xa;    &#x2f;&#x2f; &#x2b;   bugfixed by&#x3a; Andrej Pavlovic&#xa;    &#x2f;&#x2f; &#x2b;   bugfixed by&#x3a; Garagoth&#xa;    &#x2f;&#x2f; &#x25;          note&#x3a; We feel the main purpose of this function should be to ease the transport of data between php &#x26; js&#xa;    &#x2f;&#x2f; &#x25;          note&#x3a; Aiming for PHP-compatibility, we have to translate objects to arrays&#xa;    &#x2f;&#x2f; &#x2a;     example 1&#x3a; serialize&#x28;&#x5b;&#x27;Kevin&#x27;, &#x27;van&#x27;, &#x27;Zonneveld&#x27;&#x5d;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x2a;     returns 1&#x3a; &#x27;a&#x3a;3&#x3a;&#x7b;i&#x3a;0&#x3b;s&#x3a;5&#x3a;&#x22;Kevin&#x22;&#x3b;i&#x3a;1&#x3b;s&#x3a;3&#x3a;&#x22;van&#x22;&#x3b;i&#x3a;2&#x3b;s&#x3a;9&#x3a;&#x22;Zonneveld&#x22;&#x3b;&#x7d;&#x27;&#xa;    &#x2f;&#x2f; &#x2a;     example 2&#x3a; serialize&#x28;&#x7b;firstName&#x3a; &#x27;Kevin&#x27;, midName&#x3a; &#x27;van&#x27;, surName&#x3a; &#x27;Zonneveld&#x27;&#x7d;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x2a;     returns 2&#x3a; &#x27;a&#x3a;3&#x3a;&#x7b;s&#x3a;9&#x3a;&#x22;firstName&#x22;&#x3b;s&#x3a;5&#x3a;&#x22;Kevin&#x22;&#x3b;s&#x3a;7&#x3a;&#x22;midName&#x22;&#x3b;s&#x3a;3&#x3a;&#x22;van&#x22;&#x3b;s&#x3a;7&#x3a;&#x22;surName&#x22;&#x3b;s&#x3a;9&#x3a;&#x22;Zonneveld&#x22;&#x3b;&#x7d;&#x27;&#xa;&#xa;    var _getType &#x3d; function&#x28; inp &#x29; &#x7b;&#xa;        var type &#x3d; typeof inp, match&#x3b;&#xa;        var key&#x3b;&#xa;        if &#x28;type &#x3d;&#x3d; &#x27;object&#x27; &#x26;&#x26; &#x21;inp&#x29; &#x7b;&#xa;            return &#x27;null&#x27;&#x3b;&#xa;        &#x7d;&#xa;        if &#x28;type &#x3d;&#x3d; &#x22;object&#x22;&#x29; &#x7b;&#xa;            if &#x28;&#x21;inp.constructor&#x29; &#x7b;&#xa;                return &#x27;object&#x27;&#x3b;&#xa;            &#x7d;&#xa;            var cons &#x3d; inp.constructor.toString&#x28;&#x29;&#x3b;&#xa;            if &#x28;match &#x3d; cons.match&#x28;&#x2f;&#x28;&#x5c;w&#x2b;&#x29;&#x5c;&#x28;&#x2f;&#x29;&#x29; &#x7b;&#xa;                cons &#x3d; match&#x5b;1&#x5d;.toLowerCase&#x28;&#x29;&#x3b;&#xa;            &#x7d;&#xa;            var types &#x3d; &#x5b;&#x22;boolean&#x22;, &#x22;number&#x22;, &#x22;string&#x22;, &#x22;array&#x22;&#x5d;&#x3b;&#xa;            for &#x28;key in types&#x29; &#x7b;&#xa;                if &#x28;cons &#x3d;&#x3d; types&#x5b;key&#x5d;&#x29; &#x7b;&#xa;                    type &#x3d; types&#x5b;key&#x5d;&#x3b;&#xa;                    break&#x3b;&#xa;                &#x7d;&#xa;            &#x7d;&#xa;        &#x7d;&#xa;        return type&#x3b;&#xa;    &#x7d;&#x3b;&#xa;    var type &#x3d; _getType&#x28;mixed_value&#x29;&#x3b;&#xa;    var val, ktype &#x3d; &#x27;&#x27;&#x3b;&#xa;&#xa;    switch &#x28;type&#x29; &#x7b;&#xa;        case &#x22;function&#x22;&#x3a; &#xa;            val &#x3d; &#x22;&#x22;&#x3b; &#xa;            break&#x3b;&#xa;        case &#x22;undefined&#x22;&#x3a;&#xa;            val &#x3d; &#x22;N&#x22;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;boolean&#x22;&#x3a;&#xa;            val &#x3d; &#x22;b&#x3a;&#x22; &#x2b; &#x28;mixed_value &#x3f; &#x22;1&#x22; &#x3a; &#x22;0&#x22;&#x29;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;number&#x22;&#x3a;&#xa;            val &#x3d; &#x28;Math.round&#x28;mixed_value&#x29; &#x3d;&#x3d; mixed_value &#x3f; &#x22;i&#x22; &#x3a; &#x22;d&#x22;&#x29; &#x2b; &#x22;&#x3a;&#x22; &#x2b; mixed_value&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;string&#x22;&#x3a;&#xa;            val &#x3d; &#x22;s&#x3a;&#x22; &#x2b; mixed_value.length &#x2b; &#x22;&#x3a;&#x5c;&#x22;&#x22; &#x2b; mixed_value &#x2b; &#x22;&#x5c;&#x22;&#x22;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;array&#x22;&#x3a;&#xa;        case &#x22;object&#x22;&#x3a;&#xa;            val &#x3d; &#x22;a&#x22;&#x3b;&#xa;            &#x2f;&#x2a;&#xa;            if &#x28;type &#x3d;&#x3d; &#x22;object&#x22;&#x29; &#x7b;&#xa;                var objname &#x3d; mixed_value.constructor.toString&#x28;&#x29;.match&#x28;&#x2f;&#x28;&#x5c;w&#x2b;&#x29;&#x5c;&#x28;&#x5c;&#x29;&#x2f;&#x29;&#x3b;&#xa;                if &#x28;objname &#x3d;&#x3d; undefined&#x29; &#x7b;&#xa;                    return&#x3b;&#xa;                &#x7d;&#xa;                objname&#x5b;1&#x5d; &#x3d; serialize&#x28;objname&#x5b;1&#x5d;&#x29;&#x3b;&#xa;                val &#x3d; &#x22;O&#x22; &#x2b; objname&#x5b;1&#x5d;.substring&#x28;1, objname&#x5b;1&#x5d;.length - 1&#x29;&#x3b;&#xa;            &#x7d;&#xa;            &#x2a;&#x2f;&#xa;            var count &#x3d; 0&#x3b;&#xa;            var vals &#x3d; &#x22;&#x22;&#x3b;&#xa;            var okey&#x3b;&#xa;            var key&#x3b;&#xa;            for &#x28;key in mixed_value&#x29; &#x7b;&#xa;                ktype &#x3d; _getType&#x28;mixed_value&#x5b;key&#x5d;&#x29;&#x3b;&#xa;                if &#x28;ktype &#x3d;&#x3d; &#x22;function&#x22;&#x29; &#x7b; &#xa;                    continue&#x3b; &#xa;                &#x7d;&#xa;&#xa;                okey &#x3d; &#x28;key.match&#x28;&#x2f;&#x5e;&#x5b;0-9&#x5d;&#x2b;&#x24;&#x2f;&#x29; &#x3f; parseInt&#x28;key&#x29; &#x3a; key&#x29;&#x3b;&#xa;                vals &#x2b;&#x3d; serialize&#x28;okey&#x29; &#x2b;&#xa;                        serialize&#x28;mixed_value&#x5b;key&#x5d;&#x29;&#x3b;&#xa;                count&#x2b;&#x2b;&#x3b;&#xa;            &#x7d;&#xa;            val &#x2b;&#x3d; &#x22;&#x3a;&#x22; &#x2b; count &#x2b; &#x22;&#x3a;&#x7b;&#x22; &#x2b; vals &#x2b; &#x22;&#x7d;&#x22;&#x3b;&#xa;            break&#x3b;&#xa;    &#x7d;&#xa;    if &#x28;type &#x21;&#x3d; &#x22;object&#x22; &#x26;&#x26; type &#x21;&#x3d; &#x22;array&#x22;&#x29; val &#x2b;&#x3d; &#x22;&#x3b;&#x22;&#x3b;&#xa;    return val&#x3b;&#xa;&#x7d;&#xa;</jsScript_script>
      </jsScript>    </jsScripts>    <fields>      <field>        <name>string</name>
        <rename>status</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>150</xloc>
      <yloc>250</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Serialize addon_versions</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <optimizationLevel/>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>var keys &#x3d; addon_versions.split&#x28;&#x27;&#x7e;&#x7e;&#x7e;&#x27;&#x29;&#x3b;&#xa;var values &#x3d; addon_version_sums.split&#x28;&#x27;&#x7e;&#x7e;&#x7e;&#x27;&#x29;&#x3b;&#xa;&#x2f;&#x2f; These two arrays are guaranteed to be the same length.&#xa;if &#x28;keys.length &#x21;&#x3d; values.length&#x29;&#xa;&#x7b;&#xa;	writeToLog&#x28;&#x22;e&#x22;, date &#x2b; &#x22; &#x3a; &#x22; &#x2b; addon_id &#x2b; &#x22; &#x3d; &#x22; &#x2b; addon_id_sum&#x29;&#x3b;&#xa;	writeToLog&#x28;&#x22;e&#x22;, addon_versions &#x2b; &#x22; &#x3d;&#x3e; &#x22; &#x2b; keys&#x29;&#x3b;&#xa;	writeToLog&#x28;&#x22;e&#x22;, addon_version_sums &#x2b; &#x22; &#x3d;&#x3e; &#x22; &#x2b; values&#x29;&#x3b;&#xa;	throw new Error&#x28;&#x22;Key&#x2f;Value array size mismatch&#x22;&#x29;&#x3b;&#xa;&#x7d;&#xa;&#xa;var hash &#x3d; &#x7b;&#x7d;&#x3b;&#xa;for &#x28;var i &#x3d; 0&#x3b; i &#x3c; keys.length&#x3b; i&#x2b;&#x2b;&#x29; &#x7b;&#xa;	hash&#x5b;keys&#x5b;i&#x5d;&#x5d; &#x3d; parseInt&#x28;values&#x5b;i&#x5d;&#x29;&#x3b;&#xa;&#x7d;&#xa;&#xa;var string &#x3d; serialize&#x28;hash&#x29;&#x3b;</jsScript_script>
      </jsScript>      <jsScript>        <jsScript_type>1</jsScript_type>
        <jsScript_name>JSON functions</jsScript_name>
        <jsScript_script>function convert&#x28;string&#x29; &#x7b;&#xa;    &#x2f;&#x2f; Convert a string into a 1-element array serialized in the PHP format.&#xa;    &#x2f;&#x2f; &#x3e;&#x3e;&#x3e; convert&#x28;&#x27;foo&#x27;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x27;a&#x3a;1&#x3a;&#x7b;i&#x3a;0&#x3b;s&#x3a;3&#x3a;&#x22;foo&#x22;&#x3b;&#x7d;&#x27;&#xa;    return serialize&#x28;&#x5b;string&#x5d;&#x29;&#x3b;&#xa;&#x7d;&#xa;&#xa;&#xa;function serialize&#x28; mixed_value &#x29; &#x7b;&#xa;    &#x2f;&#x2f; http&#x3a;&#x2f;&#x2f;kevin.vanzonneveld.net&#xa;    &#x2f;&#x2f; &#x2b;   original by&#x3a; Arpad Ray &#x28;mailto&#x3a;arpad&#x40;php.net&#x29;&#xa;    &#x2f;&#x2f; &#x2b;   improved by&#x3a; Dino&#xa;    &#x2f;&#x2f; &#x2b;   bugfixed by&#x3a; Andrej Pavlovic&#xa;    &#x2f;&#x2f; &#x2b;   bugfixed by&#x3a; Garagoth&#xa;    &#x2f;&#x2f; &#x25;          note&#x3a; We feel the main purpose of this function should be to ease the transport of data between php &#x26; js&#xa;    &#x2f;&#x2f; &#x25;          note&#x3a; Aiming for PHP-compatibility, we have to translate objects to arrays&#xa;    &#x2f;&#x2f; &#x2a;     example 1&#x3a; serialize&#x28;&#x5b;&#x27;Kevin&#x27;, &#x27;van&#x27;, &#x27;Zonneveld&#x27;&#x5d;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x2a;     returns 1&#x3a; &#x27;a&#x3a;3&#x3a;&#x7b;i&#x3a;0&#x3b;s&#x3a;5&#x3a;&#x22;Kevin&#x22;&#x3b;i&#x3a;1&#x3b;s&#x3a;3&#x3a;&#x22;van&#x22;&#x3b;i&#x3a;2&#x3b;s&#x3a;9&#x3a;&#x22;Zonneveld&#x22;&#x3b;&#x7d;&#x27;&#xa;    &#x2f;&#x2f; &#x2a;     example 2&#x3a; serialize&#x28;&#x7b;firstName&#x3a; &#x27;Kevin&#x27;, midName&#x3a; &#x27;van&#x27;, surName&#x3a; &#x27;Zonneveld&#x27;&#x7d;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x2a;     returns 2&#x3a; &#x27;a&#x3a;3&#x3a;&#x7b;s&#x3a;9&#x3a;&#x22;firstName&#x22;&#x3b;s&#x3a;5&#x3a;&#x22;Kevin&#x22;&#x3b;s&#x3a;7&#x3a;&#x22;midName&#x22;&#x3b;s&#x3a;3&#x3a;&#x22;van&#x22;&#x3b;s&#x3a;7&#x3a;&#x22;surName&#x22;&#x3b;s&#x3a;9&#x3a;&#x22;Zonneveld&#x22;&#x3b;&#x7d;&#x27;&#xa;&#xa;    var _getType &#x3d; function&#x28; inp &#x29; &#x7b;&#xa;        var type &#x3d; typeof inp, match&#x3b;&#xa;        var key&#x3b;&#xa;        if &#x28;type &#x3d;&#x3d; &#x27;object&#x27; &#x26;&#x26; &#x21;inp&#x29; &#x7b;&#xa;            return &#x27;null&#x27;&#x3b;&#xa;        &#x7d;&#xa;        if &#x28;type &#x3d;&#x3d; &#x22;object&#x22;&#x29; &#x7b;&#xa;            if &#x28;&#x21;inp.constructor&#x29; &#x7b;&#xa;                return &#x27;object&#x27;&#x3b;&#xa;            &#x7d;&#xa;            var cons &#x3d; inp.constructor.toString&#x28;&#x29;&#x3b;&#xa;            if &#x28;match &#x3d; cons.match&#x28;&#x2f;&#x28;&#x5c;w&#x2b;&#x29;&#x5c;&#x28;&#x2f;&#x29;&#x29; &#x7b;&#xa;                cons &#x3d; match&#x5b;1&#x5d;.toLowerCase&#x28;&#x29;&#x3b;&#xa;            &#x7d;&#xa;            var types &#x3d; &#x5b;&#x22;boolean&#x22;, &#x22;number&#x22;, &#x22;string&#x22;, &#x22;array&#x22;&#x5d;&#x3b;&#xa;            for &#x28;key in types&#x29; &#x7b;&#xa;                if &#x28;cons &#x3d;&#x3d; types&#x5b;key&#x5d;&#x29; &#x7b;&#xa;                    type &#x3d; types&#x5b;key&#x5d;&#x3b;&#xa;                    break&#x3b;&#xa;                &#x7d;&#xa;            &#x7d;&#xa;        &#x7d;&#xa;        return type&#x3b;&#xa;    &#x7d;&#x3b;&#xa;    var type &#x3d; _getType&#x28;mixed_value&#x29;&#x3b;&#xa;    var val, ktype &#x3d; &#x27;&#x27;&#x3b;&#xa;&#xa;    switch &#x28;type&#x29; &#x7b;&#xa;        case &#x22;function&#x22;&#x3a; &#xa;            val &#x3d; &#x22;&#x22;&#x3b; &#xa;            break&#x3b;&#xa;        case &#x22;undefined&#x22;&#x3a;&#xa;            val &#x3d; &#x22;N&#x22;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;boolean&#x22;&#x3a;&#xa;            val &#x3d; &#x22;b&#x3a;&#x22; &#x2b; &#x28;mixed_value &#x3f; &#x22;1&#x22; &#x3a; &#x22;0&#x22;&#x29;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;number&#x22;&#x3a;&#xa;            val &#x3d; &#x28;Math.round&#x28;mixed_value&#x29; &#x3d;&#x3d; mixed_value &#x3f; &#x22;i&#x22; &#x3a; &#x22;d&#x22;&#x29; &#x2b; &#x22;&#x3a;&#x22; &#x2b; mixed_value&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;string&#x22;&#x3a;&#xa;            val &#x3d; &#x22;s&#x3a;&#x22; &#x2b; mixed_value.length &#x2b; &#x22;&#x3a;&#x5c;&#x22;&#x22; &#x2b; mixed_value &#x2b; &#x22;&#x5c;&#x22;&#x22;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;array&#x22;&#x3a;&#xa;        case &#x22;object&#x22;&#x3a;&#xa;            val &#x3d; &#x22;a&#x22;&#x3b;&#xa;            &#x2f;&#x2a;&#xa;            if &#x28;type &#x3d;&#x3d; &#x22;object&#x22;&#x29; &#x7b;&#xa;                var objname &#x3d; mixed_value.constructor.toString&#x28;&#x29;.match&#x28;&#x2f;&#x28;&#x5c;w&#x2b;&#x29;&#x5c;&#x28;&#x5c;&#x29;&#x2f;&#x29;&#x3b;&#xa;                if &#x28;objname &#x3d;&#x3d; undefined&#x29; &#x7b;&#xa;                    return&#x3b;&#xa;                &#x7d;&#xa;                objname&#x5b;1&#x5d; &#x3d; serialize&#x28;objname&#x5b;1&#x5d;&#x29;&#x3b;&#xa;                val &#x3d; &#x22;O&#x22; &#x2b; objname&#x5b;1&#x5d;.substring&#x28;1, objname&#x5b;1&#x5d;.length - 1&#x29;&#x3b;&#xa;            &#x7d;&#xa;            &#x2a;&#x2f;&#xa;            var count &#x3d; 0&#x3b;&#xa;            var vals &#x3d; &#x22;&#x22;&#x3b;&#xa;            var okey&#x3b;&#xa;            var key&#x3b;&#xa;            for &#x28;key in mixed_value&#x29; &#x7b;&#xa;                ktype &#x3d; _getType&#x28;mixed_value&#x5b;key&#x5d;&#x29;&#x3b;&#xa;                if &#x28;ktype &#x3d;&#x3d; &#x22;function&#x22;&#x29; &#x7b; &#xa;                    continue&#x3b; &#xa;                &#x7d;&#xa;&#xa;                okey &#x3d; &#x28;key.match&#x28;&#x2f;&#x5e;&#x5b;0-9&#x5d;&#x2b;&#x24;&#x2f;&#x29; &#x3f; parseInt&#x28;key&#x29; &#x3a; key&#x29;&#x3b;&#xa;                vals &#x2b;&#x3d; serialize&#x28;okey&#x29; &#x2b;&#xa;                        serialize&#x28;mixed_value&#x5b;key&#x5d;&#x29;&#x3b;&#xa;                count&#x2b;&#x2b;&#x3b;&#xa;            &#x7d;&#xa;            val &#x2b;&#x3d; &#x22;&#x3a;&#x22; &#x2b; count &#x2b; &#x22;&#x3a;&#x7b;&#x22; &#x2b; vals &#x2b; &#x22;&#x7d;&#x22;&#x3b;&#xa;            break&#x3b;&#xa;    &#x7d;&#xa;    if &#x28;type &#x21;&#x3d; &#x22;object&#x22; &#x26;&#x26; type &#x21;&#x3d; &#x22;array&#x22;&#x29; val &#x2b;&#x3d; &#x22;&#x3b;&#x22;&#x3b;&#xa;    return val&#x3b;&#xa;&#x7d;&#xa;</jsScript_script>
      </jsScript>    </jsScripts>    <fields>      <field>        <name>string</name>
        <rename>version</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>50</xloc>
      <yloc>250</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Serialize applications</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <optimizationLevel/>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>var keys &#x3d; product_guids.split&#x28;&#x27;&#x7e;&#x7e;&#x7e;&#x27;&#x29;&#x3b;&#xa;&#xa;var guid_versions &#x3d; product_versions.split&#x28;&#x27;&#x7e;&#x7e;&#x7e;&#x27;&#x29;&#x3b;&#xa;var guid_version_sums &#x3d; product_version_sums.split&#x28;&#x27;&#x7e;&#x7e;&#x7e;&#x27;&#x29;&#x3b;&#xa;&#x2f;&#x2f; These two arrays are guaranteed to be the same length.&#xa;if &#x28;keys.length &#x21;&#x3d; guid_versions.length &#x7c;&#x7c; keys.length &#x21;&#x3d; guid_version_sums.length&#x29; throw new Error&#x28;&#x22;Key&#x2f;Value array size mismatch&#x22;&#x29;&#x3b;&#xa;&#xa;var hash &#x3d; &#x7b;&#x7d;&#x3b;&#xa;for &#x28;var i &#x3d; 0&#x3b; i &#x3c; keys.length&#x3b; i&#x2b;&#x2b;&#x29; &#x7b;&#xa;	var subkeys &#x3d; guid_versions&#x5b;i&#x5d;.split&#x28;&#x27;&#x7e;&#x2b;&#x7e;&#x27;&#x29;&#x3b;&#xa;	var subvalues &#x3d; guid_version_sums&#x5b;i&#x5d;.split&#x28;&#x27;&#x7e;&#x2b;&#x7e;&#x27;&#x29;&#x3b;&#xa;	if &#x28;subkeys.length &#x21;&#x3d; subvalues.length&#x29; throw new Error&#x28;&#x22;SubKey&#x2f;SubValue array size mismatch&#x22;&#x29;&#x3b;&#xa;	var subhash &#x3d; &#x7b;&#x7d;&#x3b;&#xa;	for &#x28;var j &#x3d; 0&#x3b; j &#x3c; subkeys.length&#x3b; j&#x2b;&#x2b;&#x29; &#x7b;&#xa;		subhash&#x5b;subkeys&#x5b;j&#x5d;&#x5d; &#x3d; parseInt&#x28;subvalues&#x5b;j&#x5d;&#x29;&#x3b;&#xa;	&#x7d;&#xa;	&#xa;	hash&#x5b;keys&#x5b;i&#x5d;&#x5d; &#x3d; subhash&#x3b;&#xa;&#x7d;&#xa;&#xa;var string &#x3d; serialize&#x28;hash&#x29;&#x3b;</jsScript_script>
      </jsScript>      <jsScript>        <jsScript_type>1</jsScript_type>
        <jsScript_name>JSON functions</jsScript_name>
        <jsScript_script>function convert&#x28;string&#x29; &#x7b;&#xa;    &#x2f;&#x2f; Convert a string into a 1-element array serialized in the PHP format.&#xa;    &#x2f;&#x2f; &#x3e;&#x3e;&#x3e; convert&#x28;&#x27;foo&#x27;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x27;a&#x3a;1&#x3a;&#x7b;i&#x3a;0&#x3b;s&#x3a;3&#x3a;&#x22;foo&#x22;&#x3b;&#x7d;&#x27;&#xa;    return serialize&#x28;&#x5b;string&#x5d;&#x29;&#x3b;&#xa;&#x7d;&#xa;&#xa;&#xa;function serialize&#x28; mixed_value &#x29; &#x7b;&#xa;    &#x2f;&#x2f; http&#x3a;&#x2f;&#x2f;kevin.vanzonneveld.net&#xa;    &#x2f;&#x2f; &#x2b;   original by&#x3a; Arpad Ray &#x28;mailto&#x3a;arpad&#x40;php.net&#x29;&#xa;    &#x2f;&#x2f; &#x2b;   improved by&#x3a; Dino&#xa;    &#x2f;&#x2f; &#x2b;   bugfixed by&#x3a; Andrej Pavlovic&#xa;    &#x2f;&#x2f; &#x2b;   bugfixed by&#x3a; Garagoth&#xa;    &#x2f;&#x2f; &#x25;          note&#x3a; We feel the main purpose of this function should be to ease the transport of data between php &#x26; js&#xa;    &#x2f;&#x2f; &#x25;          note&#x3a; Aiming for PHP-compatibility, we have to translate objects to arrays&#xa;    &#x2f;&#x2f; &#x2a;     example 1&#x3a; serialize&#x28;&#x5b;&#x27;Kevin&#x27;, &#x27;van&#x27;, &#x27;Zonneveld&#x27;&#x5d;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x2a;     returns 1&#x3a; &#x27;a&#x3a;3&#x3a;&#x7b;i&#x3a;0&#x3b;s&#x3a;5&#x3a;&#x22;Kevin&#x22;&#x3b;i&#x3a;1&#x3b;s&#x3a;3&#x3a;&#x22;van&#x22;&#x3b;i&#x3a;2&#x3b;s&#x3a;9&#x3a;&#x22;Zonneveld&#x22;&#x3b;&#x7d;&#x27;&#xa;    &#x2f;&#x2f; &#x2a;     example 2&#x3a; serialize&#x28;&#x7b;firstName&#x3a; &#x27;Kevin&#x27;, midName&#x3a; &#x27;van&#x27;, surName&#x3a; &#x27;Zonneveld&#x27;&#x7d;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x2a;     returns 2&#x3a; &#x27;a&#x3a;3&#x3a;&#x7b;s&#x3a;9&#x3a;&#x22;firstName&#x22;&#x3b;s&#x3a;5&#x3a;&#x22;Kevin&#x22;&#x3b;s&#x3a;7&#x3a;&#x22;midName&#x22;&#x3b;s&#x3a;3&#x3a;&#x22;van&#x22;&#x3b;s&#x3a;7&#x3a;&#x22;surName&#x22;&#x3b;s&#x3a;9&#x3a;&#x22;Zonneveld&#x22;&#x3b;&#x7d;&#x27;&#xa;&#xa;    var _getType &#x3d; function&#x28; inp &#x29; &#x7b;&#xa;        var type &#x3d; typeof inp, match&#x3b;&#xa;        var key&#x3b;&#xa;        if &#x28;type &#x3d;&#x3d; &#x27;object&#x27; &#x26;&#x26; &#x21;inp&#x29; &#x7b;&#xa;            return &#x27;null&#x27;&#x3b;&#xa;        &#x7d;&#xa;        if &#x28;type &#x3d;&#x3d; &#x22;object&#x22;&#x29; &#x7b;&#xa;            if &#x28;&#x21;inp.constructor&#x29; &#x7b;&#xa;                return &#x27;object&#x27;&#x3b;&#xa;            &#x7d;&#xa;            var cons &#x3d; inp.constructor.toString&#x28;&#x29;&#x3b;&#xa;            if &#x28;match &#x3d; cons.match&#x28;&#x2f;&#x28;&#x5c;w&#x2b;&#x29;&#x5c;&#x28;&#x2f;&#x29;&#x29; &#x7b;&#xa;                cons &#x3d; match&#x5b;1&#x5d;.toLowerCase&#x28;&#x29;&#x3b;&#xa;            &#x7d;&#xa;            var types &#x3d; &#x5b;&#x22;boolean&#x22;, &#x22;number&#x22;, &#x22;string&#x22;, &#x22;array&#x22;&#x5d;&#x3b;&#xa;            for &#x28;key in types&#x29; &#x7b;&#xa;                if &#x28;cons &#x3d;&#x3d; types&#x5b;key&#x5d;&#x29; &#x7b;&#xa;                    type &#x3d; types&#x5b;key&#x5d;&#x3b;&#xa;                    break&#x3b;&#xa;                &#x7d;&#xa;            &#x7d;&#xa;        &#x7d;&#xa;        return type&#x3b;&#xa;    &#x7d;&#x3b;&#xa;    var type &#x3d; _getType&#x28;mixed_value&#x29;&#x3b;&#xa;    var val, ktype &#x3d; &#x27;&#x27;&#x3b;&#xa;&#xa;    switch &#x28;type&#x29; &#x7b;&#xa;        case &#x22;function&#x22;&#x3a; &#xa;            val &#x3d; &#x22;&#x22;&#x3b; &#xa;            break&#x3b;&#xa;        case &#x22;undefined&#x22;&#x3a;&#xa;            val &#x3d; &#x22;N&#x22;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;boolean&#x22;&#x3a;&#xa;            val &#x3d; &#x22;b&#x3a;&#x22; &#x2b; &#x28;mixed_value &#x3f; &#x22;1&#x22; &#x3a; &#x22;0&#x22;&#x29;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;number&#x22;&#x3a;&#xa;            val &#x3d; &#x28;Math.round&#x28;mixed_value&#x29; &#x3d;&#x3d; mixed_value &#x3f; &#x22;i&#x22; &#x3a; &#x22;d&#x22;&#x29; &#x2b; &#x22;&#x3a;&#x22; &#x2b; mixed_value&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;string&#x22;&#x3a;&#xa;            val &#x3d; &#x22;s&#x3a;&#x22; &#x2b; mixed_value.length &#x2b; &#x22;&#x3a;&#x5c;&#x22;&#x22; &#x2b; mixed_value &#x2b; &#x22;&#x5c;&#x22;&#x22;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;array&#x22;&#x3a;&#xa;        case &#x22;object&#x22;&#x3a;&#xa;            val &#x3d; &#x22;a&#x22;&#x3b;&#xa;            &#x2f;&#x2a;&#xa;            if &#x28;type &#x3d;&#x3d; &#x22;object&#x22;&#x29; &#x7b;&#xa;                var objname &#x3d; mixed_value.constructor.toString&#x28;&#x29;.match&#x28;&#x2f;&#x28;&#x5c;w&#x2b;&#x29;&#x5c;&#x28;&#x5c;&#x29;&#x2f;&#x29;&#x3b;&#xa;                if &#x28;objname &#x3d;&#x3d; undefined&#x29; &#x7b;&#xa;                    return&#x3b;&#xa;                &#x7d;&#xa;                objname&#x5b;1&#x5d; &#x3d; serialize&#x28;objname&#x5b;1&#x5d;&#x29;&#x3b;&#xa;                val &#x3d; &#x22;O&#x22; &#x2b; objname&#x5b;1&#x5d;.substring&#x28;1, objname&#x5b;1&#x5d;.length - 1&#x29;&#x3b;&#xa;            &#x7d;&#xa;            &#x2a;&#x2f;&#xa;            var count &#x3d; 0&#x3b;&#xa;            var vals &#x3d; &#x22;&#x22;&#x3b;&#xa;            var okey&#x3b;&#xa;            var key&#x3b;&#xa;            for &#x28;key in mixed_value&#x29; &#x7b;&#xa;                ktype &#x3d; _getType&#x28;mixed_value&#x5b;key&#x5d;&#x29;&#x3b;&#xa;                if &#x28;ktype &#x3d;&#x3d; &#x22;function&#x22;&#x29; &#x7b; &#xa;                    continue&#x3b; &#xa;                &#x7d;&#xa;&#xa;                okey &#x3d; &#x28;key.match&#x28;&#x2f;&#x5e;&#x5b;0-9&#x5d;&#x2b;&#x24;&#x2f;&#x29; &#x3f; parseInt&#x28;key&#x29; &#x3a; key&#x29;&#x3b;&#xa;                vals &#x2b;&#x3d; serialize&#x28;okey&#x29; &#x2b;&#xa;                        serialize&#x28;mixed_value&#x5b;key&#x5d;&#x29;&#x3b;&#xa;                count&#x2b;&#x2b;&#x3b;&#xa;            &#x7d;&#xa;            val &#x2b;&#x3d; &#x22;&#x3a;&#x22; &#x2b; count &#x2b; &#x22;&#x3a;&#x7b;&#x22; &#x2b; vals &#x2b; &#x22;&#x7d;&#x22;&#x3b;&#xa;            break&#x3b;&#xa;    &#x7d;&#xa;    if &#x28;type &#x21;&#x3d; &#x22;object&#x22; &#x26;&#x26; type &#x21;&#x3d; &#x22;array&#x22;&#x29; val &#x2b;&#x3d; &#x22;&#x3b;&#x22;&#x3b;&#xa;    return val&#x3b;&#xa;&#x7d;&#xa;</jsScript_script>
      </jsScript>    </jsScripts>    <fields>      <field>        <name>string</name>
        <rename>application</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>450</xloc>
      <yloc>250</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Serialize locales</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <optimizationLevel/>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>var keys &#x3d; locales.split&#x28;&#x27;&#x7e;&#x7e;&#x7e;&#x27;&#x29;&#x3b;&#xa;var values &#x3d; locale_sums.split&#x28;&#x27;&#x7e;&#x7e;&#x7e;&#x27;&#x29;&#x3b;&#xa;&#x2f;&#x2f; These two arrays are guaranteed to be the same length.&#xa;if &#x28;keys.length &#x21;&#x3d; values.length&#x29; throw new Error&#x28;&#x22;Key&#x2f;Value array size mismatch&#x22;&#x29;&#x3b;&#xa;&#xa;var hash &#x3d; &#x7b;&#x7d;&#x3b;&#xa;for &#x28;var i &#x3d; 0&#x3b; i &#x3c; keys.length&#x3b; i&#x2b;&#x2b;&#x29; &#x7b;&#xa;	hash&#x5b;keys&#x5b;i&#x5d;&#x5d; &#x3d; parseInt&#x28;values&#x5b;i&#x5d;&#x29;&#x3b;&#xa;&#x7d;&#xa;&#xa;var string &#x3d; serialize&#x28;hash&#x29;&#x3b;</jsScript_script>
      </jsScript>      <jsScript>        <jsScript_type>1</jsScript_type>
        <jsScript_name>JSON functions</jsScript_name>
        <jsScript_script>function convert&#x28;string&#x29; &#x7b;&#xa;    &#x2f;&#x2f; Convert a string into a 1-element array serialized in the PHP format.&#xa;    &#x2f;&#x2f; &#x3e;&#x3e;&#x3e; convert&#x28;&#x27;foo&#x27;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x27;a&#x3a;1&#x3a;&#x7b;i&#x3a;0&#x3b;s&#x3a;3&#x3a;&#x22;foo&#x22;&#x3b;&#x7d;&#x27;&#xa;    return serialize&#x28;&#x5b;string&#x5d;&#x29;&#x3b;&#xa;&#x7d;&#xa;&#xa;&#xa;function serialize&#x28; mixed_value &#x29; &#x7b;&#xa;    &#x2f;&#x2f; http&#x3a;&#x2f;&#x2f;kevin.vanzonneveld.net&#xa;    &#x2f;&#x2f; &#x2b;   original by&#x3a; Arpad Ray &#x28;mailto&#x3a;arpad&#x40;php.net&#x29;&#xa;    &#x2f;&#x2f; &#x2b;   improved by&#x3a; Dino&#xa;    &#x2f;&#x2f; &#x2b;   bugfixed by&#x3a; Andrej Pavlovic&#xa;    &#x2f;&#x2f; &#x2b;   bugfixed by&#x3a; Garagoth&#xa;    &#x2f;&#x2f; &#x25;          note&#x3a; We feel the main purpose of this function should be to ease the transport of data between php &#x26; js&#xa;    &#x2f;&#x2f; &#x25;          note&#x3a; Aiming for PHP-compatibility, we have to translate objects to arrays&#xa;    &#x2f;&#x2f; &#x2a;     example 1&#x3a; serialize&#x28;&#x5b;&#x27;Kevin&#x27;, &#x27;van&#x27;, &#x27;Zonneveld&#x27;&#x5d;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x2a;     returns 1&#x3a; &#x27;a&#x3a;3&#x3a;&#x7b;i&#x3a;0&#x3b;s&#x3a;5&#x3a;&#x22;Kevin&#x22;&#x3b;i&#x3a;1&#x3b;s&#x3a;3&#x3a;&#x22;van&#x22;&#x3b;i&#x3a;2&#x3b;s&#x3a;9&#x3a;&#x22;Zonneveld&#x22;&#x3b;&#x7d;&#x27;&#xa;    &#x2f;&#x2f; &#x2a;     example 2&#x3a; serialize&#x28;&#x7b;firstName&#x3a; &#x27;Kevin&#x27;, midName&#x3a; &#x27;van&#x27;, surName&#x3a; &#x27;Zonneveld&#x27;&#x7d;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x2a;     returns 2&#x3a; &#x27;a&#x3a;3&#x3a;&#x7b;s&#x3a;9&#x3a;&#x22;firstName&#x22;&#x3b;s&#x3a;5&#x3a;&#x22;Kevin&#x22;&#x3b;s&#x3a;7&#x3a;&#x22;midName&#x22;&#x3b;s&#x3a;3&#x3a;&#x22;van&#x22;&#x3b;s&#x3a;7&#x3a;&#x22;surName&#x22;&#x3b;s&#x3a;9&#x3a;&#x22;Zonneveld&#x22;&#x3b;&#x7d;&#x27;&#xa;&#xa;    var _getType &#x3d; function&#x28; inp &#x29; &#x7b;&#xa;        var type &#x3d; typeof inp, match&#x3b;&#xa;        var key&#x3b;&#xa;        if &#x28;type &#x3d;&#x3d; &#x27;object&#x27; &#x26;&#x26; &#x21;inp&#x29; &#x7b;&#xa;            return &#x27;null&#x27;&#x3b;&#xa;        &#x7d;&#xa;        if &#x28;type &#x3d;&#x3d; &#x22;object&#x22;&#x29; &#x7b;&#xa;            if &#x28;&#x21;inp.constructor&#x29; &#x7b;&#xa;                return &#x27;object&#x27;&#x3b;&#xa;            &#x7d;&#xa;            var cons &#x3d; inp.constructor.toString&#x28;&#x29;&#x3b;&#xa;            if &#x28;match &#x3d; cons.match&#x28;&#x2f;&#x28;&#x5c;w&#x2b;&#x29;&#x5c;&#x28;&#x2f;&#x29;&#x29; &#x7b;&#xa;                cons &#x3d; match&#x5b;1&#x5d;.toLowerCase&#x28;&#x29;&#x3b;&#xa;            &#x7d;&#xa;            var types &#x3d; &#x5b;&#x22;boolean&#x22;, &#x22;number&#x22;, &#x22;string&#x22;, &#x22;array&#x22;&#x5d;&#x3b;&#xa;            for &#x28;key in types&#x29; &#x7b;&#xa;                if &#x28;cons &#x3d;&#x3d; types&#x5b;key&#x5d;&#x29; &#x7b;&#xa;                    type &#x3d; types&#x5b;key&#x5d;&#x3b;&#xa;                    break&#x3b;&#xa;                &#x7d;&#xa;            &#x7d;&#xa;        &#x7d;&#xa;        return type&#x3b;&#xa;    &#x7d;&#x3b;&#xa;    var type &#x3d; _getType&#x28;mixed_value&#x29;&#x3b;&#xa;    var val, ktype &#x3d; &#x27;&#x27;&#x3b;&#xa;&#xa;    switch &#x28;type&#x29; &#x7b;&#xa;        case &#x22;function&#x22;&#x3a; &#xa;            val &#x3d; &#x22;&#x22;&#x3b; &#xa;            break&#x3b;&#xa;        case &#x22;undefined&#x22;&#x3a;&#xa;            val &#x3d; &#x22;N&#x22;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;boolean&#x22;&#x3a;&#xa;            val &#x3d; &#x22;b&#x3a;&#x22; &#x2b; &#x28;mixed_value &#x3f; &#x22;1&#x22; &#x3a; &#x22;0&#x22;&#x29;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;number&#x22;&#x3a;&#xa;            val &#x3d; &#x28;Math.round&#x28;mixed_value&#x29; &#x3d;&#x3d; mixed_value &#x3f; &#x22;i&#x22; &#x3a; &#x22;d&#x22;&#x29; &#x2b; &#x22;&#x3a;&#x22; &#x2b; mixed_value&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;string&#x22;&#x3a;&#xa;            val &#x3d; &#x22;s&#x3a;&#x22; &#x2b; mixed_value.length &#x2b; &#x22;&#x3a;&#x5c;&#x22;&#x22; &#x2b; mixed_value &#x2b; &#x22;&#x5c;&#x22;&#x22;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;array&#x22;&#x3a;&#xa;        case &#x22;object&#x22;&#x3a;&#xa;            val &#x3d; &#x22;a&#x22;&#x3b;&#xa;            &#x2f;&#x2a;&#xa;            if &#x28;type &#x3d;&#x3d; &#x22;object&#x22;&#x29; &#x7b;&#xa;                var objname &#x3d; mixed_value.constructor.toString&#x28;&#x29;.match&#x28;&#x2f;&#x28;&#x5c;w&#x2b;&#x29;&#x5c;&#x28;&#x5c;&#x29;&#x2f;&#x29;&#x3b;&#xa;                if &#x28;objname &#x3d;&#x3d; undefined&#x29; &#x7b;&#xa;                    return&#x3b;&#xa;                &#x7d;&#xa;                objname&#x5b;1&#x5d; &#x3d; serialize&#x28;objname&#x5b;1&#x5d;&#x29;&#x3b;&#xa;                val &#x3d; &#x22;O&#x22; &#x2b; objname&#x5b;1&#x5d;.substring&#x28;1, objname&#x5b;1&#x5d;.length - 1&#x29;&#x3b;&#xa;            &#x7d;&#xa;            &#x2a;&#x2f;&#xa;            var count &#x3d; 0&#x3b;&#xa;            var vals &#x3d; &#x22;&#x22;&#x3b;&#xa;            var okey&#x3b;&#xa;            var key&#x3b;&#xa;            for &#x28;key in mixed_value&#x29; &#x7b;&#xa;                ktype &#x3d; _getType&#x28;mixed_value&#x5b;key&#x5d;&#x29;&#x3b;&#xa;                if &#x28;ktype &#x3d;&#x3d; &#x22;function&#x22;&#x29; &#x7b; &#xa;                    continue&#x3b; &#xa;                &#x7d;&#xa;&#xa;                okey &#x3d; &#x28;key.match&#x28;&#x2f;&#x5e;&#x5b;0-9&#x5d;&#x2b;&#x24;&#x2f;&#x29; &#x3f; parseInt&#x28;key&#x29; &#x3a; key&#x29;&#x3b;&#xa;                vals &#x2b;&#x3d; serialize&#x28;okey&#x29; &#x2b;&#xa;                        serialize&#x28;mixed_value&#x5b;key&#x5d;&#x29;&#x3b;&#xa;                count&#x2b;&#x2b;&#x3b;&#xa;            &#x7d;&#xa;            val &#x2b;&#x3d; &#x22;&#x3a;&#x22; &#x2b; count &#x2b; &#x22;&#x3a;&#x7b;&#x22; &#x2b; vals &#x2b; &#x22;&#x7d;&#x22;&#x3b;&#xa;            break&#x3b;&#xa;    &#x7d;&#xa;    if &#x28;type &#x21;&#x3d; &#x22;object&#x22; &#x26;&#x26; type &#x21;&#x3d; &#x22;array&#x22;&#x29; val &#x2b;&#x3d; &#x22;&#x3b;&#x22;&#x3b;&#xa;    return val&#x3b;&#xa;&#x7d;&#xa;</jsScript_script>
      </jsScript>    </jsScripts>    <fields>      <field>        <name>string</name>
        <rename>locale</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>350</xloc>
      <yloc>250</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Serialize oses</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <optimizationLevel/>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>var keys &#x3d; oses.split&#x28;&#x27;&#x7e;&#x7e;&#x7e;&#x27;&#x29;&#x3b;&#xa;var values &#x3d; os_sums.split&#x28;&#x27;&#x7e;&#x7e;&#x7e;&#x27;&#x29;&#x3b;&#xa;&#x2f;&#x2f; These two arrays are guaranteed to be the same length.&#xa;if &#x28;keys.length &#x21;&#x3d; values.length&#x29; throw new Error&#x28;&#x22;Key&#x2f;Value array size mismatch&#x22;&#x29;&#x3b;&#xa;&#xa;var hash &#x3d; &#x7b;&#x7d;&#x3b;&#xa;for &#x28;var i &#x3d; 0&#x3b; i &#x3c; keys.length&#x3b; i&#x2b;&#x2b;&#x29; &#x7b;&#xa;	hash&#x5b;keys&#x5b;i&#x5d;&#x5d; &#x3d; parseInt&#x28;values&#x5b;i&#x5d;&#x29;&#x3b;&#xa;&#x7d;&#xa;&#xa;var string &#x3d; serialize&#x28;hash&#x29;&#x3b;</jsScript_script>
      </jsScript>      <jsScript>        <jsScript_type>1</jsScript_type>
        <jsScript_name>JSON functions</jsScript_name>
        <jsScript_script>function convert&#x28;string&#x29; &#x7b;&#xa;    &#x2f;&#x2f; Convert a string into a 1-element array serialized in the PHP format.&#xa;    &#x2f;&#x2f; &#x3e;&#x3e;&#x3e; convert&#x28;&#x27;foo&#x27;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x27;a&#x3a;1&#x3a;&#x7b;i&#x3a;0&#x3b;s&#x3a;3&#x3a;&#x22;foo&#x22;&#x3b;&#x7d;&#x27;&#xa;    return serialize&#x28;&#x5b;string&#x5d;&#x29;&#x3b;&#xa;&#x7d;&#xa;&#xa;&#xa;function serialize&#x28; mixed_value &#x29; &#x7b;&#xa;    &#x2f;&#x2f; http&#x3a;&#x2f;&#x2f;kevin.vanzonneveld.net&#xa;    &#x2f;&#x2f; &#x2b;   original by&#x3a; Arpad Ray &#x28;mailto&#x3a;arpad&#x40;php.net&#x29;&#xa;    &#x2f;&#x2f; &#x2b;   improved by&#x3a; Dino&#xa;    &#x2f;&#x2f; &#x2b;   bugfixed by&#x3a; Andrej Pavlovic&#xa;    &#x2f;&#x2f; &#x2b;   bugfixed by&#x3a; Garagoth&#xa;    &#x2f;&#x2f; &#x25;          note&#x3a; We feel the main purpose of this function should be to ease the transport of data between php &#x26; js&#xa;    &#x2f;&#x2f; &#x25;          note&#x3a; Aiming for PHP-compatibility, we have to translate objects to arrays&#xa;    &#x2f;&#x2f; &#x2a;     example 1&#x3a; serialize&#x28;&#x5b;&#x27;Kevin&#x27;, &#x27;van&#x27;, &#x27;Zonneveld&#x27;&#x5d;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x2a;     returns 1&#x3a; &#x27;a&#x3a;3&#x3a;&#x7b;i&#x3a;0&#x3b;s&#x3a;5&#x3a;&#x22;Kevin&#x22;&#x3b;i&#x3a;1&#x3b;s&#x3a;3&#x3a;&#x22;van&#x22;&#x3b;i&#x3a;2&#x3b;s&#x3a;9&#x3a;&#x22;Zonneveld&#x22;&#x3b;&#x7d;&#x27;&#xa;    &#x2f;&#x2f; &#x2a;     example 2&#x3a; serialize&#x28;&#x7b;firstName&#x3a; &#x27;Kevin&#x27;, midName&#x3a; &#x27;van&#x27;, surName&#x3a; &#x27;Zonneveld&#x27;&#x7d;&#x29;&#x3b;&#xa;    &#x2f;&#x2f; &#x2a;     returns 2&#x3a; &#x27;a&#x3a;3&#x3a;&#x7b;s&#x3a;9&#x3a;&#x22;firstName&#x22;&#x3b;s&#x3a;5&#x3a;&#x22;Kevin&#x22;&#x3b;s&#x3a;7&#x3a;&#x22;midName&#x22;&#x3b;s&#x3a;3&#x3a;&#x22;van&#x22;&#x3b;s&#x3a;7&#x3a;&#x22;surName&#x22;&#x3b;s&#x3a;9&#x3a;&#x22;Zonneveld&#x22;&#x3b;&#x7d;&#x27;&#xa;&#xa;    var _getType &#x3d; function&#x28; inp &#x29; &#x7b;&#xa;        var type &#x3d; typeof inp, match&#x3b;&#xa;        var key&#x3b;&#xa;        if &#x28;type &#x3d;&#x3d; &#x27;object&#x27; &#x26;&#x26; &#x21;inp&#x29; &#x7b;&#xa;            return &#x27;null&#x27;&#x3b;&#xa;        &#x7d;&#xa;        if &#x28;type &#x3d;&#x3d; &#x22;object&#x22;&#x29; &#x7b;&#xa;            if &#x28;&#x21;inp.constructor&#x29; &#x7b;&#xa;                return &#x27;object&#x27;&#x3b;&#xa;            &#x7d;&#xa;            var cons &#x3d; inp.constructor.toString&#x28;&#x29;&#x3b;&#xa;            if &#x28;match &#x3d; cons.match&#x28;&#x2f;&#x28;&#x5c;w&#x2b;&#x29;&#x5c;&#x28;&#x2f;&#x29;&#x29; &#x7b;&#xa;                cons &#x3d; match&#x5b;1&#x5d;.toLowerCase&#x28;&#x29;&#x3b;&#xa;            &#x7d;&#xa;            var types &#x3d; &#x5b;&#x22;boolean&#x22;, &#x22;number&#x22;, &#x22;string&#x22;, &#x22;array&#x22;&#x5d;&#x3b;&#xa;            for &#x28;key in types&#x29; &#x7b;&#xa;                if &#x28;cons &#x3d;&#x3d; types&#x5b;key&#x5d;&#x29; &#x7b;&#xa;                    type &#x3d; types&#x5b;key&#x5d;&#x3b;&#xa;                    break&#x3b;&#xa;                &#x7d;&#xa;            &#x7d;&#xa;        &#x7d;&#xa;        return type&#x3b;&#xa;    &#x7d;&#x3b;&#xa;    var type &#x3d; _getType&#x28;mixed_value&#x29;&#x3b;&#xa;    var val, ktype &#x3d; &#x27;&#x27;&#x3b;&#xa;&#xa;    switch &#x28;type&#x29; &#x7b;&#xa;        case &#x22;function&#x22;&#x3a; &#xa;            val &#x3d; &#x22;&#x22;&#x3b; &#xa;            break&#x3b;&#xa;        case &#x22;undefined&#x22;&#x3a;&#xa;            val &#x3d; &#x22;N&#x22;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;boolean&#x22;&#x3a;&#xa;            val &#x3d; &#x22;b&#x3a;&#x22; &#x2b; &#x28;mixed_value &#x3f; &#x22;1&#x22; &#x3a; &#x22;0&#x22;&#x29;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;number&#x22;&#x3a;&#xa;            val &#x3d; &#x28;Math.round&#x28;mixed_value&#x29; &#x3d;&#x3d; mixed_value &#x3f; &#x22;i&#x22; &#x3a; &#x22;d&#x22;&#x29; &#x2b; &#x22;&#x3a;&#x22; &#x2b; mixed_value&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;string&#x22;&#x3a;&#xa;            val &#x3d; &#x22;s&#x3a;&#x22; &#x2b; mixed_value.length &#x2b; &#x22;&#x3a;&#x5c;&#x22;&#x22; &#x2b; mixed_value &#x2b; &#x22;&#x5c;&#x22;&#x22;&#x3b;&#xa;            break&#x3b;&#xa;        case &#x22;array&#x22;&#x3a;&#xa;        case &#x22;object&#x22;&#x3a;&#xa;            val &#x3d; &#x22;a&#x22;&#x3b;&#xa;            &#x2f;&#x2a;&#xa;            if &#x28;type &#x3d;&#x3d; &#x22;object&#x22;&#x29; &#x7b;&#xa;                var objname &#x3d; mixed_value.constructor.toString&#x28;&#x29;.match&#x28;&#x2f;&#x28;&#x5c;w&#x2b;&#x29;&#x5c;&#x28;&#x5c;&#x29;&#x2f;&#x29;&#x3b;&#xa;                if &#x28;objname &#x3d;&#x3d; undefined&#x29; &#x7b;&#xa;                    return&#x3b;&#xa;                &#x7d;&#xa;                objname&#x5b;1&#x5d; &#x3d; serialize&#x28;objname&#x5b;1&#x5d;&#x29;&#x3b;&#xa;                val &#x3d; &#x22;O&#x22; &#x2b; objname&#x5b;1&#x5d;.substring&#x28;1, objname&#x5b;1&#x5d;.length - 1&#x29;&#x3b;&#xa;            &#x7d;&#xa;            &#x2a;&#x2f;&#xa;            var count &#x3d; 0&#x3b;&#xa;            var vals &#x3d; &#x22;&#x22;&#x3b;&#xa;            var okey&#x3b;&#xa;            var key&#x3b;&#xa;            for &#x28;key in mixed_value&#x29; &#x7b;&#xa;                ktype &#x3d; _getType&#x28;mixed_value&#x5b;key&#x5d;&#x29;&#x3b;&#xa;                if &#x28;ktype &#x3d;&#x3d; &#x22;function&#x22;&#x29; &#x7b; &#xa;                    continue&#x3b; &#xa;                &#x7d;&#xa;&#xa;                okey &#x3d; &#x28;key.match&#x28;&#x2f;&#x5e;&#x5b;0-9&#x5d;&#x2b;&#x24;&#x2f;&#x29; &#x3f; parseInt&#x28;key&#x29; &#x3a; key&#x29;&#x3b;&#xa;                vals &#x2b;&#x3d; serialize&#x28;okey&#x29; &#x2b;&#xa;                        serialize&#x28;mixed_value&#x5b;key&#x5d;&#x29;&#x3b;&#xa;                count&#x2b;&#x2b;&#x3b;&#xa;            &#x7d;&#xa;            val &#x2b;&#x3d; &#x22;&#x3a;&#x22; &#x2b; count &#x2b; &#x22;&#x3a;&#x7b;&#x22; &#x2b; vals &#x2b; &#x22;&#x7d;&#x22;&#x3b;&#xa;            break&#x3b;&#xa;    &#x7d;&#xa;    if &#x28;type &#x21;&#x3d; &#x22;object&#x22; &#x26;&#x26; type &#x21;&#x3d; &#x22;array&#x22;&#x29; val &#x2b;&#x3d; &#x22;&#x3b;&#x22;&#x3b;&#xa;    return val&#x3b;&#xa;&#x7d;&#xa;</jsScript_script>
      </jsScript>    </jsScripts>    <fields>      <field>        <name>string</name>
        <rename>os</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>250</xloc>
      <yloc>250</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Wrap guids with braces</name>
    <type>Janino</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
       <formula><field_name>product_guid_x</field_name>
<formula_string>&#x28;product_guid.matches&#x28;&#x22;&#x5e;&#x5b;0-9a-f&#x5d;&#x7b;8&#x7d;-&#x5b;0-9a-f&#x5d;&#x7b;4&#x7d;-&#x5b;0-9a-f&#x5d;&#x7b;4&#x7d;-&#x5b;0-9a-f&#x5d;&#x7b;4&#x7d;-&#x5b;0-9a-f&#x5d;&#x7b;12&#x7d;&#x24;&#x22;&#x29; &#x3f; &#x22;&#x7b;&#x22;&#x2b;product_guid&#x2b;&#x22;&#x7d;&#x22; &#x3a; product_guid&#x29;</formula_string>
<value_type>String</value_type>
<value_length>36</value_length>
<value_precision>-1</value_precision>
<replace_field>product_guid</replace_field>
</formula>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>550</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate_addon_version.dump</name>
    <type>CubeInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <file>
      <name>aggregate_addon_version.dump</name>
    </file>
    <limit>0</limit>
    <addfilenameresult>N</addfilenameresult>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>50</xloc>
      <yloc>5</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate_addon_status.dump</name>
    <type>CubeInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <file>
      <name>aggregate_addon_status.dump</name>
    </file>
    <limit>0</limit>
    <addfilenameresult>N</addfilenameresult>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>150</xloc>
      <yloc>82</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate product_os.dump</name>
    <type>CubeInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <file>
      <name>aggregate product_os.dump</name>
    </file>
    <limit>0</limit>
    <addfilenameresult>N</addfilenameresult>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>250</xloc>
      <yloc>5</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate_product_locale.dump</name>
    <type>CubeInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <file>
      <name>aggregate_product_locale.dump</name>
    </file>
    <limit>0</limit>
    <addfilenameresult>N</addfilenameresult>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>350</xloc>
      <yloc>82</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>aggregate product_guid_version.dump</name>
    <type>CubeInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <file>
      <name>aggregate product_guid_version.dump</name>
    </file>
    <limit>0</limit>
    <addfilenameresult>N</addfilenameresult>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>450</xloc>
      <yloc>5</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>
</transformation>
